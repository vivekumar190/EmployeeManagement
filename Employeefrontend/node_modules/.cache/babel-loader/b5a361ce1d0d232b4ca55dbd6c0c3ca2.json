{"ast":null,"code":"import $iFADg$react, { useContext as $iFADg$useContext, useState as $iFADg$useState, useEffect as $iFADg$useEffect, useMemo as $iFADg$useMemo, useRef as $iFADg$useRef } from \"react\";\nimport { useIsSSR as $iFADg$useIsSSR } from \"@react-aria/ssr\";\nimport { LocalizedStringDictionary as $iFADg$LocalizedStringDictionary, LocalizedStringFormatter as $iFADg$LocalizedStringFormatter } from \"@internationalized/string\";\nimport { DateFormatter as $iFADg$DateFormatter } from \"@internationalized/date\";\nimport { NumberFormatter as $iFADg$NumberFormatter } from \"@internationalized/number\";\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n// https://en.wikipedia.org/wiki/Right-to-left\n\nconst $148a7a147e38ea7f$var$RTL_SCRIPTS = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nconst $148a7a147e38ea7f$var$RTL_LANGS = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk', 'he', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);\n\nfunction $148a7a147e38ea7f$export$702d680b21cbd764(locale) {\n  // If the Intl.Locale API is available, use it to get the script for the locale.\n  // This is more accurate than guessing by language, since languages can be written in multiple scripts.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // @ts-ignore\n    let script = new Intl.Locale(locale).maximize().script;\n    return $148a7a147e38ea7f$var$RTL_SCRIPTS.has(script);\n  } // If not, just guess by the language (first part of the locale)\n\n\n  let lang = locale.split('-')[0];\n  return $148a7a147e38ea7f$var$RTL_LANGS.has(lang);\n}\n\nfunction $1e5a04cdaf7d1af8$export$f09106e7c6677ec5() {\n  // @ts-ignore\n  let locale = typeof navigator !== 'undefined' && (navigator.language || navigator.userLanguage) || 'en-US';\n\n  try {\n    // @ts-ignore\n    Intl.DateTimeFormat.supportedLocalesOf([locale]);\n  } catch (_err) {\n    locale = 'en-US';\n  }\n\n  return {\n    locale: locale,\n    direction: $148a7a147e38ea7f$export$702d680b21cbd764(locale) ? 'rtl' : 'ltr'\n  };\n}\n\nlet $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();\nlet $1e5a04cdaf7d1af8$var$listeners = new Set();\n\nfunction $1e5a04cdaf7d1af8$var$updateLocale() {\n  $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();\n\n  for (let listener of $1e5a04cdaf7d1af8$var$listeners) listener($1e5a04cdaf7d1af8$var$currentLocale);\n}\n\nfunction $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a() {\n  let isSSR = $iFADg$useIsSSR();\n  let [defaultLocale, setDefaultLocale] = $iFADg$useState($1e5a04cdaf7d1af8$var$currentLocale);\n  $iFADg$useEffect(() => {\n    if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.addEventListener('languagechange', $1e5a04cdaf7d1af8$var$updateLocale);\n    $1e5a04cdaf7d1af8$var$listeners.add(setDefaultLocale);\n    return () => {\n      $1e5a04cdaf7d1af8$var$listeners.delete(setDefaultLocale);\n      if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.removeEventListener('languagechange', $1e5a04cdaf7d1af8$var$updateLocale);\n    };\n  }, []); // We cannot determine the browser's language on the server, so default to\n  // en-US. This will be updated after hydration on the client to the correct value.\n\n  if (isSSR) return {\n    locale: 'en-US',\n    direction: 'ltr'\n  };\n  return defaultLocale;\n}\n\nconst $18f2051aff69b9bf$var$I18nContext = /*#__PURE__*/$iFADg$react.createContext(null);\n\nfunction $18f2051aff69b9bf$export$a54013f0d02a8f82(props) {\n  let {\n    locale: locale,\n    children: children\n  } = props;\n  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a();\n  let value = locale ? {\n    locale: locale,\n    direction: $148a7a147e38ea7f$export$702d680b21cbd764(locale) ? 'rtl' : 'ltr'\n  } : defaultLocale;\n  return /*#__PURE__*/$iFADg$react.createElement($18f2051aff69b9bf$var$I18nContext.Provider, {\n    value: value\n  }, children);\n}\n\nfunction $18f2051aff69b9bf$export$43bb16f9c6d9e3f7() {\n  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a();\n  let context = $iFADg$useContext($18f2051aff69b9bf$var$I18nContext);\n  return context || defaultLocale;\n}\n\nvar $2aa2084a6c2b6b4f$exports = {};\n\"use strict\";\n\nconst $fca6afa0e843324b$var$cache = new WeakMap();\n\nfunction $fca6afa0e843324b$var$getCachedDictionary(strings) {\n  let dictionary = $fca6afa0e843324b$var$cache.get(strings);\n\n  if (!dictionary) {\n    dictionary = new $iFADg$LocalizedStringDictionary(strings);\n    $fca6afa0e843324b$var$cache.set(strings, dictionary);\n  }\n\n  return dictionary;\n}\n\nfunction $fca6afa0e843324b$export$f12b703ca79dfbb1(strings) {\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  let dictionary = $iFADg$useMemo(() => $fca6afa0e843324b$var$getCachedDictionary(strings), [strings]);\n  return $iFADg$useMemo(() => new $iFADg$LocalizedStringFormatter(locale, dictionary), [locale, dictionary]);\n}\n\nfunction $896ba0a80a8f4d36$export$85fd5fdf27bacc79(options) {\n  // Reuse last options object if it is shallowly equal, which allows the useMemo result to also be reused.\n  let lastOptions = $iFADg$useRef(null);\n  if (options && lastOptions.current && $896ba0a80a8f4d36$var$isEqual(options, lastOptions.current)) options = lastOptions.current;\n  lastOptions.current = options;\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  return $iFADg$useMemo(() => new $iFADg$DateFormatter(locale, options), [locale, options]);\n}\n\nfunction $896ba0a80a8f4d36$var$isEqual(a, b) {\n  if (a === b) return true;\n  let aKeys = Object.keys(a);\n  let bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) return false;\n\n  for (let key of aKeys) {\n    if (b[key] !== a[key]) return false;\n  }\n\n  return true;\n}\n\nfunction $a916eb452884faea$export$b7a616150fdb9f44() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  return $iFADg$useMemo(() => new $iFADg$NumberFormatter(locale, options), [locale, options]);\n}\n\nlet $325a3faab7a68acd$var$cache = new Map();\n\nfunction $325a3faab7a68acd$export$a16aca283550c30d(options) {\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if ($325a3faab7a68acd$var$cache.has(cacheKey)) return $325a3faab7a68acd$var$cache.get(cacheKey);\n  let formatter = new Intl.Collator(locale, options);\n  $325a3faab7a68acd$var$cache.set(cacheKey, formatter);\n  return formatter;\n}\n\nfunction $bb77f239b46e8c72$export$3274cf84b703fff(options) {\n  let collator = $325a3faab7a68acd$export$a16aca283550c30d({\n    usage: 'search',\n    ...options\n  }); // TODO(later): these methods don't currently support the ignorePunctuation option.\n\n  return {\n    startsWith(string, substring) {\n      if (substring.length === 0) return true; // Normalize both strings so we can slice safely\n      // TODO: take into account the ignorePunctuation option as well...\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(0, substring.length), substring) === 0;\n    },\n\n    endsWith(string, substring) {\n      if (substring.length === 0) return true;\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(-substring.length), substring) === 0;\n    },\n\n    contains(string, substring) {\n      if (substring.length === 0) return true;\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      let scan = 0;\n      let sliceLen = substring.length;\n\n      for (; scan + sliceLen <= string.length; scan++) {\n        let slice = string.slice(scan, scan + sliceLen);\n        if (collator.compare(substring, slice) === 0) return true;\n      }\n\n      return false;\n    }\n\n  };\n}\n\nexport { $18f2051aff69b9bf$export$a54013f0d02a8f82 as I18nProvider, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7 as useLocale, $fca6afa0e843324b$export$f12b703ca79dfbb1 as useLocalizedStringFormatter, $896ba0a80a8f4d36$export$85fd5fdf27bacc79 as useDateFormatter, $a916eb452884faea$export$b7a616150fdb9f44 as useNumberFormatter, $325a3faab7a68acd$export$a16aca283550c30d as useCollator, $bb77f239b46e8c72$export$3274cf84b703fff as useFilter };","map":{"version":3,"mappings":"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","names":["$148a7a147e38ea7f$var$RTL_SCRIPTS","Set","$148a7a147e38ea7f$var$RTL_LANGS","$148a7a147e38ea7f$export$702d680b21cbd764","locale","Intl","Locale","script","maximize","has","lang","split","$1e5a04cdaf7d1af8$export$f09106e7c6677ec5","navigator","language","userLanguage","DateTimeFormat","supportedLocalesOf","_err","direction","$1e5a04cdaf7d1af8$var$currentLocale","$1e5a04cdaf7d1af8$var$listeners","$1e5a04cdaf7d1af8$var$updateLocale","listener","$1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a","isSSR","$iFADg$useIsSSR","defaultLocale","setDefaultLocale","$iFADg$useState","$iFADg$useEffect","size","window","addEventListener","add","delete","removeEventListener","$18f2051aff69b9bf$var$I18nContext","$iFADg$react","createContext","$18f2051aff69b9bf$export$a54013f0d02a8f82","props","children","value","Provider","$18f2051aff69b9bf$export$43bb16f9c6d9e3f7","context","$iFADg$useContext","$fca6afa0e843324b$var$cache","WeakMap","$fca6afa0e843324b$var$getCachedDictionary","strings","dictionary","get","$iFADg$LocalizedStringDictionary","set","$fca6afa0e843324b$export$f12b703ca79dfbb1","$iFADg$useMemo","$iFADg$LocalizedStringFormatter","$896ba0a80a8f4d36$export$85fd5fdf27bacc79","options","lastOptions","$iFADg$useRef","current","$896ba0a80a8f4d36$var$isEqual","$iFADg$DateFormatter","a","b","aKeys","Object","keys","bKeys","length","key","$a916eb452884faea$export$b7a616150fdb9f44","$iFADg$NumberFormatter","$325a3faab7a68acd$var$cache","Map","$325a3faab7a68acd$export$a16aca283550c30d","cacheKey","entries","sort","join","formatter","Collator","$bb77f239b46e8c72$export$3274cf84b703fff","collator","usage","startsWith","string","substring","normalize","compare","slice","endsWith","contains","scan","sliceLen"],"sources":["C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\utils.ts","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\useDefaultLocale.ts","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\context.tsx","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\i18n\\dist\\node_modules\\@parcel\\node-resolver-core\\lib\\_empty.js","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\useLocalizedStringFormatter.ts","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\useDateFormatter.ts","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\useNumberFormatter.ts","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\useCollator.ts","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\useFilter.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// https://en.wikipedia.org/wiki/Right-to-left\nconst RTL_SCRIPTS = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nconst RTL_LANGS = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk', 'he', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);\n\n/**\n * Determines if a locale is read right to left using [Intl.Locale]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale}.\n */\nexport function isRTL(locale: string) {\n  // If the Intl.Locale API is available, use it to get the script for the locale.\n  // This is more accurate than guessing by language, since languages can be written in multiple scripts.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // @ts-ignore\n    let script = new Intl.Locale(locale).maximize().script;\n    return RTL_SCRIPTS.has(script);\n  }\n\n  // If not, just guess by the language (first part of the locale)\n  let lang = locale.split('-')[0];\n  return RTL_LANGS.has(lang);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction} from '@react-types/shared';\nimport {isRTL} from './utils';\nimport {useEffect, useState} from 'react';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport interface Locale {\n  /** The [BCP47](https://www.ietf.org/rfc/bcp/bcp47.txt) language code for the locale. */\n  locale: string,\n  /** The writing direction for the locale. */\n  direction: Direction\n}\n\n/**\n * Gets the locale setting of the browser.\n */\nexport function getDefaultLocale(): Locale {\n  // @ts-ignore\n  let locale = (typeof navigator !== 'undefined' && (navigator.language || navigator.userLanguage)) || 'en-US';\n  try {\n    // @ts-ignore\n    Intl.DateTimeFormat.supportedLocalesOf([locale]);\n  } catch (_err) {\n    locale = 'en-US';\n  }\n  return {\n    locale,\n    direction: isRTL(locale) ? 'rtl' : 'ltr'\n  };\n}\n\nlet currentLocale = getDefaultLocale();\nlet listeners = new Set<(locale: Locale) => void>();\n\nfunction updateLocale() {\n  currentLocale = getDefaultLocale();\n  for (let listener of listeners) {\n    listener(currentLocale);\n  }\n}\n\n/**\n * Returns the current browser/system language, and updates when it changes.\n */\nexport function useDefaultLocale(): Locale {\n  let isSSR = useIsSSR();\n  let [defaultLocale, setDefaultLocale] = useState(currentLocale);\n\n  useEffect(() => {\n    if (listeners.size === 0) {\n      window.addEventListener('languagechange', updateLocale);\n    }\n\n    listeners.add(setDefaultLocale);\n\n    return () => {\n      listeners.delete(setDefaultLocale);\n      if (listeners.size === 0) {\n        window.removeEventListener('languagechange', updateLocale);\n      }\n    };\n  }, []);\n\n  // We cannot determine the browser's language on the server, so default to\n  // en-US. This will be updated after hydration on the client to the correct value.\n  if (isSSR) {\n    return {\n      locale: 'en-US',\n      direction: 'ltr'\n    };\n  }\n\n  return defaultLocale;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isRTL} from './utils';\nimport {Locale, useDefaultLocale} from './useDefaultLocale';\nimport React, {ReactNode, useContext} from 'react';\n\nexport interface I18nProviderProps {\n  /** Contents that should have the locale applied. */\n  children: ReactNode,\n  /** The locale to apply to the children. */\n  locale?: string\n}\n\nconst I18nContext = React.createContext<Locale>(null);\n\n/**\n * Provides the locale for the application to all child components.\n */\nexport function I18nProvider(props: I18nProviderProps) {\n  let {locale, children} = props;\n  let defaultLocale = useDefaultLocale();\n\n  let value: Locale = locale ? {\n    locale,\n    direction: isRTL(locale) ? 'rtl' : 'ltr'\n  } : defaultLocale;\n\n  return (\n    <I18nContext.Provider value={value}>\n      {children}\n    </I18nContext.Provider>\n  );\n}\n\n/**\n * Returns the current locale and layout direction.\n */\nexport function useLocale(): Locale {\n  let defaultLocale = useDefaultLocale();\n  let context = useContext(I18nContext);\n  return context || defaultLocale;\n}\n","\"use strict\";","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {LocalizedString, LocalizedStringDictionary, LocalizedStringFormatter, LocalizedStrings} from '@internationalized/string';\nimport {useLocale} from './context';\nimport {useMemo} from 'react';\n\nconst cache = new WeakMap();\nfunction getCachedDictionary<K extends string, T extends LocalizedString>(strings: LocalizedStrings<K, T>): LocalizedStringDictionary<K, T> {\n  let dictionary = cache.get(strings);\n  if (!dictionary) {\n    dictionary = new LocalizedStringDictionary(strings);\n    cache.set(strings, dictionary);\n  }\n\n  return dictionary;\n}\n\n/**\n * Provides localized string formatting for the current locale. Supports interpolating variables,\n * selecting the correct pluralization, and formatting numbers. Automatically updates when the locale changes.\n * @param strings - A mapping of languages to localized strings by key.\n */\nexport function useLocalizedStringFormatter<K extends string = string, T extends LocalizedString = string>(strings: LocalizedStrings<K, T>): LocalizedStringFormatter<K, T> {\n  let {locale} = useLocale();\n  let dictionary = useMemo(() => getCachedDictionary(strings), [strings]);\n  return useMemo(() => new LocalizedStringFormatter(locale, dictionary), [locale, dictionary]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DateFormatter} from '@internationalized/date';\nimport {useLocale} from './context';\nimport {useMemo, useRef} from 'react';\n\nexport interface DateFormatterOptions extends Intl.DateTimeFormatOptions {\n  calendar?: string\n}\n\n/**\n * Provides localized date formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the date formatter for performance.\n * @param options - Formatting options.\n */\nexport function useDateFormatter(options?: DateFormatterOptions): DateFormatter {\n  // Reuse last options object if it is shallowly equal, which allows the useMemo result to also be reused.\n  let lastOptions = useRef(null);\n  if (options && lastOptions.current && isEqual(options, lastOptions.current)) {\n    options = lastOptions.current;\n  }\n\n  lastOptions.current = options;\n\n  let {locale} = useLocale();\n  return useMemo(() => new DateFormatter(locale, options), [locale, options]);\n}\n\nfunction isEqual(a: DateFormatterOptions, b: DateFormatterOptions) {\n  if (a === b) {\n    return true;\n  }\n\n  let aKeys = Object.keys(a);\n  let bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  for (let key of aKeys) {\n    if (b[key] !== a[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {NumberFormatOptions, NumberFormatter} from '@internationalized/number';\nimport {useLocale} from './context';\nimport {useMemo} from 'react';\n\n/**\n * Provides localized number formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the number formatter for performance.\n * @param options - Formatting options.\n */\nexport function useNumberFormatter(options: NumberFormatOptions = {}): Intl.NumberFormat {\n  let {locale} = useLocale();\n  return useMemo(() => new NumberFormatter(locale, options), [locale, options]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useLocale} from './context';\n\nlet cache = new Map<string, Intl.Collator>();\n\n/**\n * Provides localized string collation for the current locale. Automatically updates when the locale changes,\n * and handles caching of the collator for performance.\n * @param options - Collator options.\n */\nexport function useCollator(options?: Intl.CollatorOptions): Intl.Collator {\n  let {locale} = useLocale();\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if (cache.has(cacheKey)) {\n    return cache.get(cacheKey);\n  }\n\n  let formatter = new Intl.Collator(locale, options);\n  cache.set(cacheKey, formatter);\n  return formatter;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCollator} from './useCollator';\n\nexport interface Filter {\n  /** Returns whether a string starts with a given substring. */\n  startsWith(string: string, substring: string): boolean,\n  /** Returns whether a string ends with a given substring. */\n  endsWith(string: string, substring: string): boolean,\n  /** Returns whether a string contains a given substring. */\n  contains(string: string, substring: string): boolean\n}\n\n/**\n * Provides localized string search functionality that is useful for filtering or matching items\n * in a list. Options can be provided to adjust the sensitivity to case, diacritics, and other parameters.\n */\nexport function useFilter(options?: Intl.CollatorOptions): Filter {\n  let collator = useCollator({\n    usage: 'search',\n    ...options\n  });\n\n  // TODO(later): these methods don't currently support the ignorePunctuation option.\n\n  return {\n    startsWith(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      // Normalize both strings so we can slice safely\n      // TODO: take into account the ignorePunctuation option as well...\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(0, substring.length), substring) === 0;\n    },\n    endsWith(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(-substring.length), substring) === 0;\n    },\n    contains(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n\n      let scan = 0;\n      let sliceLen = substring.length;\n      for (; scan + sliceLen <= string.length; scan++) {\n        let slice = string.slice(scan, scan + sliceLen);\n        if (collator.compare(substring, slice) === 0) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const registerManager = createAsyncThunk('manager/register', async (user, _ref) => {\n  let {\n    rejectWithValue,\n    getState,\n    dispatch\n  } = _ref;\n\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:8080/api/manager/signup', user, config);\n    return data;\n  } catch (error) {\n    if (!(error !== null && error !== void 0 && error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : error.response.data);\n  }\n}); //manager slices\n\nconst managerSlices = createSlice({\n  name: 'user',\n  initialState: {\n    userAuth: 'login'\n  },\n  extraReducers: builder => {\n    //register\n    builder.addCase(registerManager.pending, (state, action) => {\n      state.loading = true;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(registerManager.fulfilled, (state, action) => {\n      state.loading = false;\n      state.registered = action === null || action === void 0 ? void 0 : action.payload;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(registerManager.rejected, (state, action) => {\n      var _action$payload, _action$payload$error, _action$error;\n\n      state.loading = false;\n      state.appErr = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : (_action$payload$error = _action$payload.error) === null || _action$payload$error === void 0 ? void 0 : _action$payload$error.message;\n      state.serverErr = action === null || action === void 0 ? void 0 : (_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.message;\n    });\n  }\n});\nexport default managerSlices.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","registerManager","user","rejectWithValue","getState","dispatch","config","headers","data","post","error","response","managerSlices","name","initialState","userAuth","extraReducers","builder","addCase","pending","state","action","loading","appErr","undefined","serverErr","fulfilled","registered","payload","rejected","message","reducer"],"sources":["C:/Users/MR . Noobick/Desktop/frontend/src/redux/slices/managerSlices.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const registerManager=createAsyncThunk('manager/register',async(user,{rejectWithValue,getState,dispatch})=>{\r\n\r\ntry {\r\n    const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n    const {data} =await axios.post('http://localhost:8080/api/manager/signup',user,config);\r\n    return data;\r\n} catch (error) {\r\n   if(!error?.response ){\r\n    throw error;\r\n   } \r\n   return rejectWithValue(error?.response.data);\r\n}\r\n});\r\n\r\n\r\n//manager slices\r\n\r\nconst managerSlices=createSlice({name:'user',initialState:{userAuth:'login'},\r\n\r\nextraReducers:(builder)=>{\r\n    //register\r\n    builder.addCase(registerManager.pending,(state,action)=>{\r\n        state.loading = true;\r\n        state.appErr=undefined;\r\n        state.serverErr=undefined;\r\n    });\r\n    builder.addCase(registerManager.fulfilled,(state,action)=>{\r\n        state.loading = false;\r\n        state.registered=action?.payload;\r\n        state.appErr=undefined;\r\n        state.serverErr=undefined;\r\n    });\r\n    builder.addCase(registerManager.rejected,(state,action)=>{\r\n        state.loading = false;\r\n        state.appErr=action?.payload?.error?.message;\r\n        state.serverErr=action?.error?.message;\r\n  });\r\n}\r\n});\r\nexport default managerSlices.reducer;"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAACH,gBAAgB,CAAC,kBAAD,EAAoB,OAAMI,IAAN,WAAiD;EAAA,IAAtC;IAACC,eAAD;IAAiBC,QAAjB;IAA0BC;EAA1B,CAAsC;;EAElH,IAAI;IACA,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE;QACP,gBAAgB;MADT;IADE,CAAf;IAKA,MAAM;MAACC;IAAD,IAAQ,MAAMR,KAAK,CAACS,IAAN,CAAW,0CAAX,EAAsDP,IAAtD,EAA2DI,MAA3D,CAApB;IACA,OAAOE,IAAP;EACH,CARD,CAQE,OAAOE,KAAP,EAAc;IACb,IAAG,EAACA,KAAD,aAACA,KAAD,eAACA,KAAK,CAAEC,QAAR,CAAH,EAAqB;MACpB,MAAMD,KAAN;IACA;;IACD,OAAOP,eAAe,CAACO,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEC,QAAP,CAAgBH,IAAjB,CAAtB;EACF;AACA,CAhB4C,CAAtC,C,CAmBP;;AAEA,MAAMI,aAAa,GAACb,WAAW,CAAC;EAACc,IAAI,EAAC,MAAN;EAAaC,YAAY,EAAC;IAACC,QAAQ,EAAC;EAAV,CAA1B;EAEhCC,aAAa,EAAEC,OAAD,IAAW;IACrB;IACAA,OAAO,CAACC,OAAR,CAAgBjB,eAAe,CAACkB,OAAhC,EAAwC,CAACC,KAAD,EAAOC,MAAP,KAAgB;MACpDD,KAAK,CAACE,OAAN,GAAgB,IAAhB;MACAF,KAAK,CAACG,MAAN,GAAaC,SAAb;MACAJ,KAAK,CAACK,SAAN,GAAgBD,SAAhB;IACH,CAJD;IAKAP,OAAO,CAACC,OAAR,CAAgBjB,eAAe,CAACyB,SAAhC,EAA0C,CAACN,KAAD,EAAOC,MAAP,KAAgB;MACtDD,KAAK,CAACE,OAAN,GAAgB,KAAhB;MACAF,KAAK,CAACO,UAAN,GAAiBN,MAAjB,aAAiBA,MAAjB,uBAAiBA,MAAM,CAAEO,OAAzB;MACAR,KAAK,CAACG,MAAN,GAAaC,SAAb;MACAJ,KAAK,CAACK,SAAN,GAAgBD,SAAhB;IACH,CALD;IAMAP,OAAO,CAACC,OAAR,CAAgBjB,eAAe,CAAC4B,QAAhC,EAAyC,CAACT,KAAD,EAAOC,MAAP,KAAgB;MAAA;;MACrDD,KAAK,CAACE,OAAN,GAAgB,KAAhB;MACAF,KAAK,CAACG,MAAN,GAAaF,MAAb,aAAaA,MAAb,0CAAaA,MAAM,CAAEO,OAArB,6EAAa,gBAAiBlB,KAA9B,0DAAa,sBAAwBoB,OAArC;MACAV,KAAK,CAACK,SAAN,GAAgBJ,MAAhB,aAAgBA,MAAhB,wCAAgBA,MAAM,CAAEX,KAAxB,kDAAgB,cAAeoB,OAA/B;IACL,CAJC;EAKH;AApB+B,CAAD,CAA/B;AAsBA,eAAelB,aAAa,CAACmB,OAA7B"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Rect as $cVkRF$Rect } from \"@react-stately/virtualizer\";\nimport { useId as $cVkRF$useId, filterDOMProps as $cVkRF$filterDOMProps, mergeProps as $cVkRF$mergeProps, useUpdateEffect as $cVkRF$useUpdateEffect, useDescription as $cVkRF$useDescription } from \"@react-aria/utils\";\nimport { useMemo as $cVkRF$useMemo, useRef as $cVkRF$useRef } from \"react\";\nimport { useCollator as $cVkRF$useCollator, useLocale as $cVkRF$useLocale, useLocalizedStringFormatter as $cVkRF$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useSelectableCollection as $cVkRF$useSelectableCollection, useSelectableItem as $cVkRF$useSelectableItem } from \"@react-aria/selection\";\nimport { announce as $cVkRF$announce } from \"@react-aria/live-announcer\";\nimport { useInteractionModality as $cVkRF$useInteractionModality, isFocusVisible as $cVkRF$isFocusVisible } from \"@react-aria/interactions\";\nimport { getFocusableTreeWalker as $cVkRF$getFocusableTreeWalker, focusSafely as $cVkRF$focusSafely } from \"@react-aria/focus\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nclass $d1c300d9c497e402$export$de9feff04fda126e {\n  isCell(node) {\n    return node.type === 'cell';\n  }\n\n  isRow(node) {\n    return node.type === 'row' || node.type === 'item';\n  }\n\n  findPreviousKey(fromKey, pred) {\n    let key = fromKey != null ? this.collection.getKeyBefore(fromKey) : this.collection.getLastKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) return key;\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n\n  findNextKey(fromKey, pred) {\n    let key = fromKey != null ? this.collection.getKeyAfter(fromKey) : this.collection.getFirstKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) return key;\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n\n  getKeyBelow(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return; // If focus was on a cell, start searching from the parent row\n\n    if (this.isCell(startItem)) key = startItem.parentKey; // Find the next item\n\n    key = this.findNextKey(key);\n\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the next row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      } // Otherwise, focus the next row\n\n\n      if (this.focusMode === 'row') return key;\n    }\n  }\n\n  getKeyAbove(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return; // If focus is on a cell, start searching from the parent row\n\n    if (this.isCell(startItem)) key = startItem.parentKey; // Find the previous item\n\n    key = this.findPreviousKey(key);\n\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the previous row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      } // Otherwise, focus the previous row\n\n\n      if (this.focusMode === 'row') return key;\n    }\n  }\n\n  getKeyRightOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return; // If focus is on a row, focus the first child cell.\n\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl' ? children[children.length - 1].key : children[0].key;\n    } // If focus is on a cell, focus the next cell if any,\n    // otherwise focus the parent row.\n\n\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let next = this.direction === 'rtl' ? children[item.index - 1] : children[item.index + 1];\n      if (next) return next.key; // focus row only if focusMode is set to row\n\n      if (this.focusMode === 'row') return item.parentKey;\n      return this.direction === 'rtl' ? this.getFirstKey(key) : this.getLastKey(key);\n    }\n  }\n\n  getKeyLeftOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return; // If focus is on a row, focus the last child cell.\n\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl' ? children[0].key : children[children.length - 1].key;\n    } // If focus is on a cell, focus the previous cell if any,\n    // otherwise focus the parent row.\n\n\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let prev = this.direction === 'rtl' ? children[item.index + 1] : children[item.index - 1];\n      if (prev) return prev.key; // focus row only if focusMode is set to row\n\n      if (this.focusMode === 'row') return item.parentKey;\n      return this.direction === 'rtl' ? this.getLastKey(key) : this.getFirstKey(key);\n    }\n  }\n\n  getFirstKey(key, global) {\n    let item;\n\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) return; // If global flag is not set, and a cell is currently focused,\n      // move focus to the first cell in the parent row.\n\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        return [...parent.childNodes][0].key;\n      }\n    } // Find the first row\n\n\n    key = this.findNextKey(); // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n\n    if (key != null && item && this.isCell(item) && global || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      key = [...item.childNodes][0].key;\n    } // Otherwise, focus the row itself.\n\n\n    return key;\n  }\n\n  getLastKey(key, global) {\n    let item;\n\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) return; // If global flag is not set, and a cell is currently focused,\n      // move focus to the last cell in the parent row.\n\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        let children = [...parent.childNodes];\n        return children[children.length - 1].key;\n      }\n    } // Find the last row\n\n\n    key = this.findPreviousKey(); // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n\n    if (key != null && item && this.isCell(item) && global || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      let children = [...item.childNodes];\n      key = children[children.length - 1].key;\n    } // Otherwise, focus the row itself.\n\n\n    return key;\n  }\n\n  getItem(key) {\n    return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n  }\n\n  getItemRect(key) {\n    var ref;\n    if (this.layout) return (ref = this.layout.getLayoutInfo(key)) === null || ref === void 0 ? void 0 : ref.rect;\n    let item = this.getItem(key);\n    if (item) return new $cVkRF$Rect(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);\n  }\n\n  getPageHeight() {\n    var ref, ref1, ref2;\n    if (this.layout) return (ref = this.layout.virtualizer) === null || ref === void 0 ? void 0 : ref.visibleRect.height;\n    return (ref1 = this.ref) === null || ref1 === void 0 ? void 0 : (ref2 = ref1.current) === null || ref2 === void 0 ? void 0 : ref2.offsetHeight;\n  }\n\n  getContentHeight() {\n    var ref, ref3;\n    if (this.layout) return this.layout.getContentSize().height;\n    return (ref = this.ref) === null || ref === void 0 ? void 0 : (ref3 = ref.current) === null || ref3 === void 0 ? void 0 : ref3.scrollHeight;\n  }\n\n  getKeyPageAbove(key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) return null;\n    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());\n\n    while (itemRect && itemRect.y > pageY) {\n      key = this.getKeyAbove(key);\n      itemRect = this.getItemRect(key);\n    }\n\n    return key;\n  }\n\n  getKeyPageBelow(key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) return null;\n    let pageHeight = this.getPageHeight();\n    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);\n\n    while (itemRect && itemRect.maxY < pageY) {\n      let nextKey = this.getKeyBelow(key);\n      itemRect = this.getItemRect(nextKey); // Guard against case where maxY of the last key is barely less than pageY due to rounding\n      // and thus it attempts to set key to null\n\n      if (nextKey != null) key = nextKey;\n    }\n\n    return key;\n  }\n\n  getKeyForSearch(search, fromKey) {\n    if (!this.collator) return null;\n    let collection = this.collection;\n    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey(); // If the starting key is a cell, search from its parent row.\n\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') key = startItem.parentKey;\n    let hasWrapped = false;\n\n    while (key != null) {\n      let item = collection.getItem(key); // check row text value for match\n\n      if (item.textValue) {\n        let substring = item.textValue.slice(0, search.length);\n\n        if (this.collator.compare(substring, search) === 0) {\n          if (this.isRow(item) && this.focusMode === 'cell') return [...item.childNodes][0].key;\n          return item.key;\n        }\n      }\n\n      key = this.findNextKey(key); // Wrap around when reaching the end of the collection\n\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n\n  constructor(options) {\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.ref = options.ref;\n    this.direction = options.direction;\n    this.collator = options.collator;\n    this.layout = options.layout;\n    this.focusMode = options.focusMode || 'row';\n  }\n\n}\n\nconst $1af922eb41e03c8f$export$e6235c0d09b995d0 = new WeakMap();\nvar $1dbe5ffd32adb38c$exports = {};\nvar $682989befd4f478d$exports = {};\n$682989befd4f478d$exports = {\n  \"deselectedItem\": args => `${args.item} غير المحدد`,\n  \"longPressToSelect\": `اضغط مطولًا للدخول إلى وضع التحديد.`,\n  \"select\": `تحديد`,\n  \"selectedAll\": `جميع العناصر المحددة.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `لم يتم تحديد عناصر`,\n    one: () => `${formatter.number(args.count)} عنصر محدد`,\n    other: () => `${formatter.number(args.count)} عنصر محدد`\n  })}.`,\n  \"selectedItem\": args => `${args.item} المحدد`\n};\nvar $f7fca02019afd941$exports = {};\n$f7fca02019afd941$exports = {\n  \"deselectedItem\": args => `${args.item} не е избран.`,\n  \"longPressToSelect\": `Натиснете и задръжте за да влезете в избирателен режим.`,\n  \"select\": `Изберете`,\n  \"selectedAll\": `Всички елементи са избрани.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Няма избрани елементи`,\n    one: () => `${formatter.number(args.count)} избран елемент`,\n    other: () => `${formatter.number(args.count)} избрани елементи`\n  })}.`,\n  \"selectedItem\": args => `${args.item} избран.`\n};\nvar $8f86f40be75387f1$exports = {};\n$8f86f40be75387f1$exports = {\n  \"deselectedItem\": args => `Položka ${args.item} není vybrána.`,\n  \"longPressToSelect\": `Dlouhým stisknutím přejdete do režimu výběru.`,\n  \"select\": `Vybrat`,\n  \"selectedAll\": `Vybrány všechny položky.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nevybrány žádné položky`,\n    one: () => `Vybrána ${formatter.number(args.count)} položka`,\n    other: () => `Vybráno ${formatter.number(args.count)} položek`\n  })}.`,\n  \"selectedItem\": args => `Vybrána položka ${args.item}.`\n};\nvar $db24ba43c8d652ee$exports = {};\n$db24ba43c8d652ee$exports = {\n  \"deselectedItem\": args => `${args.item} ikke valgt.`,\n  \"longPressToSelect\": `Lav et langt tryk for at aktivere valgtilstand.`,\n  \"select\": `Vælg`,\n  \"selectedAll\": `Alle elementer valgt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ingen elementer valgt`,\n    one: () => `${formatter.number(args.count)} element valgt`,\n    other: () => `${formatter.number(args.count)} elementer valgt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} valgt.`\n};\nvar $f8f1e72c8b5447d6$exports = {};\n$f8f1e72c8b5447d6$exports = {\n  \"deselectedItem\": args => `${args.item} nicht ausgewählt.`,\n  \"longPressToSelect\": `Gedrückt halten, um Auswahlmodus zu öffnen.`,\n  \"select\": `Auswählen`,\n  \"selectedAll\": `Alle Elemente ausgewählt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Keine Elemente ausgewählt`,\n    one: () => `${formatter.number(args.count)} Element ausgewählt`,\n    other: () => `${formatter.number(args.count)} Elemente ausgewählt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} ausgewählt.`\n};\nvar $9a73ed2983c3ab0b$exports = {};\n$9a73ed2983c3ab0b$exports = {\n  \"deselectedItem\": args => `Δεν επιλέχθηκε το στοιχείο ${args.item}.`,\n  \"longPressToSelect\": `Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.`,\n  \"select\": `Επιλογή`,\n  \"selectedAll\": `Επιλέχθηκαν όλα τα στοιχεία.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Δεν επιλέχθηκαν στοιχεία`,\n    one: () => `Επιλέχθηκε ${formatter.number(args.count)} στοιχείο`,\n    other: () => `Επιλέχθηκαν ${formatter.number(args.count)} στοιχεία`\n  })}.`,\n  \"selectedItem\": args => `Επιλέχθηκε το στοιχείο ${args.item}.`\n};\nvar $583de0b3587601b9$exports = {};\n$583de0b3587601b9$exports = {\n  \"deselectedItem\": args => `${args.item} not selected.`,\n  \"select\": `Select`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `No items selected`,\n    one: () => `${formatter.number(args.count)} item selected`,\n    other: () => `${formatter.number(args.count)} items selected`\n  })}.`,\n  \"selectedAll\": `All items selected.`,\n  \"selectedItem\": args => `${args.item} selected.`,\n  \"longPressToSelect\": `Long press to enter selection mode.`\n};\nvar $147159c978043442$exports = {};\n$147159c978043442$exports = {\n  \"deselectedItem\": args => `${args.item} no seleccionado.`,\n  \"longPressToSelect\": `Mantenga pulsado para abrir el modo de selección.`,\n  \"select\": `Seleccionar`,\n  \"selectedAll\": `Todos los elementos seleccionados.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ningún elemento seleccionado`,\n    one: () => `${formatter.number(args.count)} elemento seleccionado`,\n    other: () => `${formatter.number(args.count)} elementos seleccionados`\n  })}.`,\n  \"selectedItem\": args => `${args.item} seleccionado.`\n};\nvar $5cbb62c8a19173ac$exports = {};\n$5cbb62c8a19173ac$exports = {\n  \"deselectedItem\": args => `${args.item} pole valitud.`,\n  \"longPressToSelect\": `Valikurežiimi sisenemiseks vajutage pikalt.`,\n  \"select\": `Vali`,\n  \"selectedAll\": `Kõik üksused valitud.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Üksusi pole valitud`,\n    one: () => `${formatter.number(args.count)} üksus valitud`,\n    other: () => `${formatter.number(args.count)} üksust valitud`\n  })}.`,\n  \"selectedItem\": args => `${args.item} valitud.`\n};\nvar $a33d71dc804cc59e$exports = {};\n$a33d71dc804cc59e$exports = {\n  \"deselectedItem\": args => `Kohdetta ${args.item} ei valittu.`,\n  \"longPressToSelect\": `Siirry valintatilaan painamalla pitkään.`,\n  \"select\": `Valitse`,\n  \"selectedAll\": `Kaikki kohteet valittu.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ei yhtään kohdetta valittu`,\n    one: () => `${formatter.number(args.count)} kohde valittu`,\n    other: () => `${formatter.number(args.count)} kohdetta valittu`\n  })}.`,\n  \"selectedItem\": args => `${args.item} valittu.`\n};\nvar $92d800447793d084$exports = {};\n$92d800447793d084$exports = {\n  \"deselectedItem\": args => `${args.item} non sélectionné.`,\n  \"longPressToSelect\": `Appuyez de manière prolongée pour passer en mode de sélection.`,\n  \"select\": `Sélectionner`,\n  \"selectedAll\": `Tous les éléments sélectionnés.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Aucun élément sélectionné`,\n    one: () => `${formatter.number(args.count)} élément sélectionné`,\n    other: () => `${formatter.number(args.count)} éléments sélectionnés`\n  })}.`,\n  \"selectedItem\": args => `${args.item} sélectionné.`\n};\nvar $fe732cdb32124ea8$exports = {};\n$fe732cdb32124ea8$exports = {\n  \"deselectedItem\": args => `${args.item} לא נבחר.`,\n  \"longPressToSelect\": `הקשה ארוכה לכניסה למצב בחירה.`,\n  \"select\": `בחר`,\n  \"selectedAll\": `כל הפריטים נבחרו.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `לא נבחרו פריטים`,\n    one: () => `פריט ${formatter.number(args.count)} נבחר`,\n    other: () => `${formatter.number(args.count)} פריטים נבחרו`\n  })}.`,\n  \"selectedItem\": args => `${args.item} נבחר.`\n};\nvar $e41234e934efb4f5$exports = {};\n$e41234e934efb4f5$exports = {\n  \"deselectedItem\": args => `Stavka ${args.item} nije odabrana.`,\n  \"longPressToSelect\": `Dugo pritisnite za ulazak u način odabira.`,\n  \"select\": `Odaberite`,\n  \"selectedAll\": `Odabrane su sve stavke.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nije odabrana nijedna stavka`,\n    one: () => `Odabrana je ${formatter.number(args.count)} stavka`,\n    other: () => `Odabrano je ${formatter.number(args.count)} stavki`\n  })}.`,\n  \"selectedItem\": args => `Stavka ${args.item} je odabrana.`\n};\nvar $1b0393182473bf9e$exports = {};\n$1b0393182473bf9e$exports = {\n  \"deselectedItem\": args => `${args.item} nincs kijelölve.`,\n  \"longPressToSelect\": `Nyomja hosszan a kijelöléshez.`,\n  \"select\": `Kijelölés`,\n  \"selectedAll\": `Az összes elem kijelölve.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Egy elem sincs kijelölve`,\n    one: () => `${formatter.number(args.count)} elem kijelölve`,\n    other: () => `${formatter.number(args.count)} elem kijelölve`\n  })}.`,\n  \"selectedItem\": args => `${args.item} kijelölve.`\n};\nvar $2eed782c1c110ce7$exports = {};\n$2eed782c1c110ce7$exports = {\n  \"deselectedItem\": args => `${args.item} non selezionato.`,\n  \"longPressToSelect\": `Premi a lungo per passare alla modalità di selezione.`,\n  \"select\": `Seleziona`,\n  \"selectedAll\": `Tutti gli elementi selezionati.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nessun elemento selezionato`,\n    one: () => `${formatter.number(args.count)} elemento selezionato`,\n    other: () => `${formatter.number(args.count)} elementi selezionati`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selezionato.`\n};\nvar $8b5d459f86e9b23c$exports = {};\n$8b5d459f86e9b23c$exports = {\n  \"deselectedItem\": args => `${args.item} が選択されていません。`,\n  \"longPressToSelect\": `長押しして選択モードを開きます。`,\n  \"select\": `選択`,\n  \"selectedAll\": `すべての項目を選択しました。`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `項目が選択されていません`,\n    one: () => `${formatter.number(args.count)} 項目を選択しました`,\n    other: () => `${formatter.number(args.count)} 項目を選択しました`\n  })}。`,\n  \"selectedItem\": args => `${args.item} を選択しました。`\n};\nvar $1949c3ad17295fd4$exports = {};\n$1949c3ad17295fd4$exports = {\n  \"deselectedItem\": args => `${args.item}이(가) 선택되지 않았습니다.`,\n  \"longPressToSelect\": `선택 모드로 들어가려면 길게 누르십시오.`,\n  \"select\": `선택`,\n  \"selectedAll\": `모든 항목이 선택되었습니다.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `선택된 항목이 없습니다`,\n    one: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`,\n    other: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`\n  })}.`,\n  \"selectedItem\": args => `${args.item}이(가) 선택되었습니다.`\n};\nvar $f5e3df4dc8aa7b54$exports = {};\n$f5e3df4dc8aa7b54$exports = {\n  \"deselectedItem\": args => `${args.item} nepasirinkta.`,\n  \"longPressToSelect\": `Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.`,\n  \"select\": `Pasirinkti`,\n  \"selectedAll\": `Pasirinkti visi elementai.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nepasirinktas nė vienas elementas`,\n    one: () => `Pasirinktas ${formatter.number(args.count)} elementas`,\n    other: () => `Pasirinkta elementų: ${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `Pasirinkta: ${args.item}.`\n};\nvar $9dd86690a5c2b2c5$exports = {};\n$9dd86690a5c2b2c5$exports = {\n  \"deselectedItem\": args => `Vienums ${args.item} nav atlasīts.`,\n  \"longPressToSelect\": `Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.`,\n  \"select\": `Atlasīt`,\n  \"selectedAll\": `Atlasīti visi vienumi.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nav atlasīts neviens vienums`,\n    one: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`,\n    other: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `Atlasīts vienums ${args.item}.`\n};\nvar $843964c3bf9a7d24$exports = {};\n$843964c3bf9a7d24$exports = {\n  \"deselectedItem\": args => `${args.item} er ikke valgt.`,\n  \"longPressToSelect\": `Bruk et langt trykk for å gå inn i valgmodus.`,\n  \"select\": `Velg`,\n  \"selectedAll\": `Alle elementer er valgt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ingen elementer er valgt`,\n    one: () => `${formatter.number(args.count)} element er valgt`,\n    other: () => `${formatter.number(args.count)} elementer er valgt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} er valgt.`\n};\nvar $73f50e845f9ef3b4$exports = {};\n$73f50e845f9ef3b4$exports = {\n  \"deselectedItem\": args => `${args.item} niet geselecteerd.`,\n  \"longPressToSelect\": `Druk lang om de selectiemodus te openen.`,\n  \"select\": `Selecteren`,\n  \"selectedAll\": `Alle items geselecteerd.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Geen items geselecteerd`,\n    one: () => `${formatter.number(args.count)} item geselecteerd`,\n    other: () => `${formatter.number(args.count)} items geselecteerd`\n  })}.`,\n  \"selectedItem\": args => `${args.item} geselecteerd.`\n};\nvar $87f92a7e077514b2$exports = {};\n$87f92a7e077514b2$exports = {\n  \"deselectedItem\": args => `Nie zaznaczono ${args.item}.`,\n  \"longPressToSelect\": `Naciśnij i przytrzymaj, aby wejść do trybu wyboru.`,\n  \"select\": `Zaznacz`,\n  \"selectedAll\": `Wszystkie zaznaczone elementy.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nie zaznaczono żadnych elementów`,\n    one: () => `${formatter.number(args.count)} zaznaczony element`,\n    other: () => `${formatter.number(args.count)} zaznaczonych elementów`\n  })}.`,\n  \"selectedItem\": args => `Zaznaczono ${args.item}.`\n};\nvar $c28c98d58ee9ff6f$exports = {};\n$c28c98d58ee9ff6f$exports = {\n  \"deselectedItem\": args => `${args.item} não selecionado.`,\n  \"longPressToSelect\": `Mantenha pressionado para entrar no modo de seleção.`,\n  \"select\": `Selecionar`,\n  \"selectedAll\": `Todos os itens selecionados.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nenhum item selecionado`,\n    one: () => `${formatter.number(args.count)} item selecionado`,\n    other: () => `${formatter.number(args.count)} itens selecionados`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selecionado.`\n};\nvar $b6b1503b17b2254d$exports = {};\n$b6b1503b17b2254d$exports = {\n  \"deselectedItem\": args => `${args.item} não selecionado.`,\n  \"longPressToSelect\": `Prima continuamente para entrar no modo de seleção.`,\n  \"select\": `Selecionar`,\n  \"selectedAll\": `Todos os itens selecionados.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nenhum item selecionado`,\n    one: () => `${formatter.number(args.count)} item selecionado`,\n    other: () => `${formatter.number(args.count)} itens selecionados`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selecionado.`\n};\nvar $8bdaeb71e50c3e1a$exports = {};\n$8bdaeb71e50c3e1a$exports = {\n  \"deselectedItem\": args => `${args.item} neselectat.`,\n  \"longPressToSelect\": `Apăsați lung pentru a intra în modul de selectare.`,\n  \"select\": `Selectare`,\n  \"selectedAll\": `Toate elementele selectate.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Niciun element selectat`,\n    one: () => `${formatter.number(args.count)} element selectat`,\n    other: () => `${formatter.number(args.count)} elemente selectate`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selectat.`\n};\nvar $ec2b852dd7c3d1f2$exports = {};\n$ec2b852dd7c3d1f2$exports = {\n  \"deselectedItem\": args => `${args.item} не выбрано.`,\n  \"longPressToSelect\": `Нажмите и удерживайте для входа в режим выбора.`,\n  \"select\": `Выбрать`,\n  \"selectedAll\": `Выбраны все элементы.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Нет выбранных элементов`,\n    one: () => `${formatter.number(args.count)} элемент выбран`,\n    other: () => `${formatter.number(args.count)} элементов выбрано`\n  })}.`,\n  \"selectedItem\": args => `${args.item} выбрано.`\n};\nvar $79e6d900d6a4f82d$exports = {};\n$79e6d900d6a4f82d$exports = {\n  \"deselectedItem\": args => `Nevybraté položky: ${args.item}.`,\n  \"longPressToSelect\": `Dlhším stlačením prejdite do režimu výberu.`,\n  \"select\": `Vybrať`,\n  \"selectedAll\": `Všetky vybraté položky.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Žiadne vybraté položky`,\n    one: () => `${formatter.number(args.count)} vybratá položka`,\n    other: () => `Počet vybratých položiek:${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `Vybraté položky: ${args.item}.`\n};\nvar $f4c1f0d5d4d03d80$exports = {};\n$f4c1f0d5d4d03d80$exports = {\n  \"deselectedItem\": args => `Element ${args.item} ni izbran.`,\n  \"longPressToSelect\": `Za izbirni način pritisnite in dlje časa držite.`,\n  \"select\": `Izberite`,\n  \"selectedAll\": `Vsi elementi so izbrani.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Noben element ni izbran`,\n    one: () => `${formatter.number(args.count)} element je izbran`,\n    other: () => `${formatter.number(args.count)} elementov je izbranih`\n  })}.`,\n  \"selectedItem\": args => `Element ${args.item} je izbran.`\n};\nvar $46252cd87269b10b$exports = {};\n$46252cd87269b10b$exports = {\n  \"deselectedItem\": args => `${args.item} nije izabrano.`,\n  \"longPressToSelect\": `Dugo pritisnite za ulazak u režim biranja.`,\n  \"select\": `Izaberite`,\n  \"selectedAll\": `Izabrane su sve stavke.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nije izabrana nijedna stavka`,\n    one: () => `Izabrana je ${formatter.number(args.count)} stavka`,\n    other: () => `Izabrano je ${formatter.number(args.count)} stavki`\n  })}.`,\n  \"selectedItem\": args => `${args.item} je izabrano.`\n};\nvar $d4d5d8dab362555c$exports = {};\n$d4d5d8dab362555c$exports = {\n  \"deselectedItem\": args => `${args.item} ej markerat.`,\n  \"longPressToSelect\": `Tryck länge när du vill öppna väljarläge.`,\n  \"select\": `Markera`,\n  \"selectedAll\": `Alla markerade objekt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Inga markerade objekt`,\n    one: () => `${formatter.number(args.count)} markerat objekt`,\n    other: () => `${formatter.number(args.count)} markerade objekt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} markerat.`\n};\nvar $3d55d1f97c377e83$exports = {};\n$3d55d1f97c377e83$exports = {\n  \"deselectedItem\": args => `${args.item} seçilmedi.`,\n  \"longPressToSelect\": `Seçim moduna girmek için uzun basın.`,\n  \"select\": `Seç`,\n  \"selectedAll\": `Tüm ögeler seçildi.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Hiçbir öge seçilmedi`,\n    one: () => `${formatter.number(args.count)} öge seçildi`,\n    other: () => `${formatter.number(args.count)} öge seçildi`\n  })}.`,\n  \"selectedItem\": args => `${args.item} seçildi.`\n};\nvar $5368512f1c703a3f$exports = {};\n$5368512f1c703a3f$exports = {\n  \"deselectedItem\": args => `${args.item} не вибрано.`,\n  \"longPressToSelect\": `Виконайте довге натиснення, щоб перейти в режим вибору.`,\n  \"select\": `Вибрати`,\n  \"selectedAll\": `Усі елементи вибрано.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Жодних елементів не вибрано`,\n    one: () => `${formatter.number(args.count)} елемент вибрано`,\n    other: () => `Вибрано елементів: ${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `${args.item} вибрано.`\n};\nvar $f1316b1074463583$exports = {};\n$f1316b1074463583$exports = {\n  \"deselectedItem\": args => `未选择 ${args.item}。`,\n  \"longPressToSelect\": `长按以进入选择模式。`,\n  \"select\": `选择`,\n  \"selectedAll\": `已选择所有项目。`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `未选择项目`,\n    one: () => `已选择 ${formatter.number(args.count)} 个项目`,\n    other: () => `已选择 ${formatter.number(args.count)} 个项目`\n  })}。`,\n  \"selectedItem\": args => `已选择 ${args.item}。`\n};\nvar $7e60654723031b6f$exports = {};\n$7e60654723031b6f$exports = {\n  \"deselectedItem\": args => `未選取「${args.item}」。`,\n  \"longPressToSelect\": `長按以進入選擇模式。`,\n  \"select\": `選取`,\n  \"selectedAll\": `已選取所有項目。`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `未選取任何項目`,\n    one: () => `已選取 ${formatter.number(args.count)} 個項目`,\n    other: () => `已選取 ${formatter.number(args.count)} 個項目`\n  })}。`,\n  \"selectedItem\": args => `已選取「${args.item}」。`\n};\n$1dbe5ffd32adb38c$exports = {\n  \"ar-AE\": $682989befd4f478d$exports,\n  \"bg-BG\": $f7fca02019afd941$exports,\n  \"cs-CZ\": $8f86f40be75387f1$exports,\n  \"da-DK\": $db24ba43c8d652ee$exports,\n  \"de-DE\": $f8f1e72c8b5447d6$exports,\n  \"el-GR\": $9a73ed2983c3ab0b$exports,\n  \"en-US\": $583de0b3587601b9$exports,\n  \"es-ES\": $147159c978043442$exports,\n  \"et-EE\": $5cbb62c8a19173ac$exports,\n  \"fi-FI\": $a33d71dc804cc59e$exports,\n  \"fr-FR\": $92d800447793d084$exports,\n  \"he-IL\": $fe732cdb32124ea8$exports,\n  \"hr-HR\": $e41234e934efb4f5$exports,\n  \"hu-HU\": $1b0393182473bf9e$exports,\n  \"it-IT\": $2eed782c1c110ce7$exports,\n  \"ja-JP\": $8b5d459f86e9b23c$exports,\n  \"ko-KR\": $1949c3ad17295fd4$exports,\n  \"lt-LT\": $f5e3df4dc8aa7b54$exports,\n  \"lv-LV\": $9dd86690a5c2b2c5$exports,\n  \"nb-NO\": $843964c3bf9a7d24$exports,\n  \"nl-NL\": $73f50e845f9ef3b4$exports,\n  \"pl-PL\": $87f92a7e077514b2$exports,\n  \"pt-BR\": $c28c98d58ee9ff6f$exports,\n  \"pt-PT\": $b6b1503b17b2254d$exports,\n  \"ro-RO\": $8bdaeb71e50c3e1a$exports,\n  \"ru-RU\": $ec2b852dd7c3d1f2$exports,\n  \"sk-SK\": $79e6d900d6a4f82d$exports,\n  \"sl-SI\": $f4c1f0d5d4d03d80$exports,\n  \"sr-SP\": $46252cd87269b10b$exports,\n  \"sv-SE\": $d4d5d8dab362555c$exports,\n  \"tr-TR\": $3d55d1f97c377e83$exports,\n  \"uk-UA\": $5368512f1c703a3f$exports,\n  \"zh-CN\": $f1316b1074463583$exports,\n  \"zh-TW\": $7e60654723031b6f$exports\n};\n\nfunction $92599c3fd427b763$export$137e594ef3218a10(props, state) {\n  let {\n    getRowText = key => {\n      var ref;\n      return (ref = state.collection.getItem(key)) === null || ref === void 0 ? void 0 : ref.textValue;\n    }\n  } = props;\n  let stringFormatter = $cVkRF$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports)); // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n\n  let selection = state.selectionManager.rawSelection;\n  let lastSelection = $cVkRF$useRef(selection);\n  $cVkRF$useUpdateEffect(() => {\n    var ref;\n\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n      return;\n    }\n\n    let addedKeys = $92599c3fd427b763$var$diffSelection(selection, lastSelection.current);\n    let removedKeys = $92599c3fd427b763$var$diffSelection(lastSelection.current, selection); // If adding or removing a single row from the selection, announce the name of that item.\n\n    let isReplace = state.selectionManager.selectionBehavior === 'replace';\n    let messages = [];\n\n    if (state.selectionManager.selectedKeys.size === 1 && isReplace) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) messages.push(stringFormatter.format('selectedItem', {\n          item: currentSelectionText\n        }));\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      let addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) messages.push(stringFormatter.format('selectedItem', {\n        item: addedText\n      }));\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        let removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) messages.push(stringFormatter.format('deselectedItem', {\n          item: removedText\n        }));\n      }\n    } // Announce how many items are selected, except when selecting the first item.\n\n\n    if (state.selectionManager.selectionMode === 'multiple') {\n      if (messages.length === 0 || selection === 'all' || selection.size > 1 || lastSelection.current === 'all' || ((ref = lastSelection.current) === null || ref === void 0 ? void 0 : ref.size) > 1) messages.push(selection === 'all' ? stringFormatter.format('selectedAll') : stringFormatter.format('selectedCount', {\n        count: selection.size\n      }));\n    }\n\n    if (messages.length > 0) $cVkRF$announce(messages.join(' '));\n    lastSelection.current = selection;\n  }, [selection]);\n}\n\nfunction $92599c3fd427b763$var$diffSelection(a, b) {\n  let res = new Set();\n  if (a === 'all' || b === 'all') return res;\n\n  for (let key of a.keys()) if (!b.has(key)) res.add(key);\n\n  return res;\n}\n\nfunction $5b9b5b5723db6ae1$export$be42ebdab07ae4c2(props) {\n  let stringFormatter = $cVkRF$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports));\n  let modality = $cVkRF$useInteractionModality(); // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n\n  let shouldLongPress = (modality === 'pointer' || modality === 'virtual' || modality == null) && typeof window !== 'undefined' && 'ontouchstart' in window;\n  let interactionDescription = $cVkRF$useMemo(() => {\n    let selectionMode = props.selectionManager.selectionMode;\n    let selectionBehavior = props.selectionManager.selectionBehavior;\n    let message = undefined;\n    if (shouldLongPress) message = stringFormatter.format('longPressToSelect');\n    return selectionBehavior === 'replace' && selectionMode !== 'none' && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, stringFormatter, shouldLongPress]);\n  let descriptionProps = $cVkRF$useDescription(interactionDescription);\n  return descriptionProps;\n}\n\nfunction $83c6e2eafa584c67$export$f6b86a04e5d66d90(props, state, ref) {\n  let {\n    isVirtualized: isVirtualized,\n    keyboardDelegate: keyboardDelegate,\n    focusMode: focusMode,\n    scrollRef: scrollRef,\n    getRowText: getRowText,\n    onRowAction: onRowAction,\n    onCellAction: onCellAction\n  } = props;\n  if (!props['aria-label'] && !props['aria-labelledby']) console.warn('An aria-label or aria-labelledby prop is required for accessibility.'); // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n\n  let collator = $cVkRF$useCollator({\n    usage: 'search',\n    sensitivity: 'base'\n  });\n  let {\n    direction: direction\n  } = $cVkRF$useLocale();\n  let delegate = $cVkRF$useMemo(() => keyboardDelegate || new $d1c300d9c497e402$export$de9feff04fda126e({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref: ref,\n    direction: direction,\n    collator: collator,\n    focusMode: focusMode\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, focusMode]);\n  let {\n    collectionProps: collectionProps\n  } = $cVkRF$useSelectableCollection({\n    ref: ref,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    isVirtualized: isVirtualized,\n    scrollRef: scrollRef\n  });\n  let id = $cVkRF$useId(props.id);\n  $1af922eb41e03c8f$export$e6235c0d09b995d0.set(state, {\n    keyboardDelegate: delegate,\n    actions: {\n      onRowAction: onRowAction,\n      onCellAction: onCellAction\n    }\n  });\n  let descriptionProps = $5b9b5b5723db6ae1$export$be42ebdab07ae4c2({\n    selectionManager: state.selectionManager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n  let domProps = $cVkRF$filterDOMProps(props, {\n    labelable: true\n  });\n  let gridProps = $cVkRF$mergeProps(domProps, {\n    role: 'grid',\n    id: id,\n    'aria-multiselectable': state.selectionManager.selectionMode === 'multiple' ? 'true' : undefined\n  }, state.isKeyboardNavigationDisabled ? {} : collectionProps, descriptionProps);\n\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size;\n    gridProps['aria-colcount'] = state.collection.columnCount;\n  }\n\n  $92599c3fd427b763$export$137e594ef3218a10({\n    getRowText: getRowText\n  }, state);\n  return {\n    gridProps: gridProps\n  };\n}\n\nfunction $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf() {\n  return {\n    rowGroupProps: {\n      role: 'rowgroup'\n    }\n  };\n}\n\nfunction $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onAction\n  } = props;\n  let {\n    actions: {\n      onRowAction: onRowAction\n    }\n  } = $1af922eb41e03c8f$export$e6235c0d09b995d0.get(state);\n  let {\n    itemProps: itemProps,\n    isPressed: isPressed\n  } = $cVkRF$useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref: ref,\n    isVirtualized: isVirtualized,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onRowAction ? () => onRowAction(node.key) : onAction\n  });\n  let isSelected = state.selectionManager.isSelected(node.key);\n  let rowProps = {\n    role: 'row',\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined,\n    ...itemProps\n  };\n  if (isVirtualized) rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n\n  return {\n    rowProps: rowProps,\n    isPressed: isPressed\n  };\n}\n\nfunction $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized,\n    focusMode = 'child',\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onAction\n  } = props;\n  let {\n    direction: direction\n  } = $cVkRF$useLocale();\n  let {\n    keyboardDelegate: keyboardDelegate,\n    actions: {\n      onCellAction: onCellAction\n    }\n  } = $1af922eb41e03c8f$export$e6235c0d09b995d0.get(state); // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n\n  let focus = () => {\n    let treeWalker = $cVkRF$getFocusableTreeWalker(ref.current);\n\n    if (focusMode === 'child') {\n      // If focus is already on a focusable child within the cell, early return so we don't shift focus\n      if (ref.current.contains(document.activeElement) && ref.current !== document.activeElement) return;\n      let focusable = state.selectionManager.childFocusStrategy === 'last' ? $ab90dcbc1b5466d0$var$last(treeWalker) : treeWalker.firstChild();\n\n      if (focusable) {\n        $cVkRF$focusSafely(focusable);\n        return;\n      }\n    }\n\n    if (!ref.current.contains(document.activeElement)) $cVkRF$focusSafely(ref.current);\n  };\n\n  let {\n    itemProps: itemProps,\n    isPressed: isPressed\n  } = $cVkRF$useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref: ref,\n    isVirtualized: isVirtualized,\n    focus: focus,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onCellAction ? () => onCellAction(node.key) : onAction\n  });\n\n  let onKeyDownCapture = e => {\n    if (!e.currentTarget.contains(e.target) || state.isKeyboardNavigationDisabled) return;\n    let walker = $cVkRF$getFocusableTreeWalker(ref.current);\n    walker.currentNode = document.activeElement;\n\n    switch (e.key) {\n      case 'ArrowLeft':\n        {\n          // Find the next focusable element within the cell.\n          let focusable = direction === 'rtl' ? walker.nextNode() : walker.previousNode(); // Don't focus the cell itself if focusMode is \"child\"\n\n          if (focusMode === 'child' && focusable === ref.current) focusable = null;\n\n          if (focusable) {\n            e.preventDefault();\n            e.stopPropagation();\n            $cVkRF$focusSafely(focusable);\n          } else {\n            // If there is no next focusable child, then move to the next cell to the left of this one.\n            // This will be handled by useSelectableCollection. However, if there is no cell to the left\n            // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n            // same as this one. In that case we need to handle focusing either the cell or the first/last\n            // child, depending on the focus mode.\n            let prev = keyboardDelegate.getKeyLeftOf(node.key);\n            if (prev !== node.key) break;\n            e.preventDefault();\n            e.stopPropagation();\n            if (focusMode === 'cell' && direction === 'rtl') $cVkRF$focusSafely(ref.current);else {\n              walker.currentNode = ref.current;\n              focusable = direction === 'rtl' ? walker.firstChild() : $ab90dcbc1b5466d0$var$last(walker);\n              if (focusable) $cVkRF$focusSafely(focusable);\n            }\n          }\n\n          break;\n        }\n\n      case 'ArrowRight':\n        {\n          let focusable = direction === 'rtl' ? walker.previousNode() : walker.nextNode();\n          if (focusMode === 'child' && focusable === ref.current) focusable = null;\n\n          if (focusable) {\n            e.preventDefault();\n            e.stopPropagation();\n            $cVkRF$focusSafely(focusable);\n          } else {\n            let next = keyboardDelegate.getKeyRightOf(node.key);\n            if (next !== node.key) break;\n            e.preventDefault();\n            e.stopPropagation();\n            if (focusMode === 'cell' && direction === 'ltr') $cVkRF$focusSafely(ref.current);else {\n              walker.currentNode = ref.current;\n              focusable = direction === 'rtl' ? $ab90dcbc1b5466d0$var$last(walker) : walker.firstChild();\n              if (focusable) $cVkRF$focusSafely(focusable);\n            }\n          }\n\n          break;\n        }\n\n      case 'ArrowUp':\n      case 'ArrowDown':\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement.dispatchEvent(new KeyboardEvent(e.nativeEvent.type, e.nativeEvent));\n        }\n\n        break;\n    }\n  }; // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n\n\n  let onFocus = e => {\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!$cVkRF$isFocusVisible()) state.selectionManager.setFocusedKey(node.key);\n      return;\n    } // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n\n\n    requestAnimationFrame(() => {\n      if (focusMode === 'child' && document.activeElement === ref.current) focus();\n    });\n  };\n\n  let gridCellProps = $cVkRF$mergeProps(itemProps, {\n    role: 'gridcell',\n    onKeyDownCapture: onKeyDownCapture,\n    onFocus: onFocus\n  });\n\n  var _colIndex;\n\n  if (isVirtualized) gridCellProps['aria-colindex'] = ((_colIndex = node.colIndex) !== null && _colIndex !== void 0 ? _colIndex : node.index) + 1; // aria-colindex is 1-based\n\n  return {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  };\n}\n\nfunction $ab90dcbc1b5466d0$var$last(walker) {\n  let next;\n  let last;\n\n  do {\n    last = walker.lastChild();\n    if (last) next = last;\n  } while (last);\n\n  return next;\n}\n\nfunction $7cb39d07f245a780$export$70e2eed1a92976ad(props, state) {\n  let {\n    key: key\n  } = props;\n  let manager = state.selectionManager;\n  let checkboxId = $cVkRF$useId();\n  let isDisabled = !state.selectionManager.canSelectItem(key);\n  let isSelected = state.selectionManager.isSelected(key);\n\n  let onChange = () => manager.select(key);\n\n  const stringFormatter = $cVkRF$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports));\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      'aria-label': stringFormatter.format('select'),\n      isSelected: isSelected,\n      isDisabled: isDisabled,\n      onChange: onChange\n    }\n  };\n}\n\nexport { $d1c300d9c497e402$export$de9feff04fda126e as GridKeyboardDelegate, $83c6e2eafa584c67$export$f6b86a04e5d66d90 as useGrid, $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf as useGridRowGroup, $4159a7a9cbb0cc18$export$96357d5a73f686fa as useGridRow, $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c as useGridCell, $7cb39d07f245a780$export$70e2eed1a92976ad as useGridSelectionCheckbox, $5b9b5b5723db6ae1$export$be42ebdab07ae4c2 as useHighlightSelectionDescription, $92599c3fd427b763$export$137e594ef3218a10 as useGridSelectionAnnouncement };","map":{"version":3,"mappings":"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","names":["$d1c300d9c497e402$export$de9feff04fda126e","isCell","node","type","isRow","findPreviousKey","fromKey","pred","key","collection","getKeyBefore","getLastKey","item","getItem","findNextKey","getKeyAfter","getFirstKey","getKeyBelow","startItem","parentKey","childNodes","index","focusMode","getKeyAbove","getKeyRightOf","children","direction","length","parent","next","getKeyLeftOf","prev","global","ref","current","querySelector","getItemRect","layout","getLayoutInfo","rect","$cVkRF$Rect","offsetLeft","offsetTop","offsetWidth","offsetHeight","getPageHeight","ref1","ref2","virtualizer","visibleRect","height","getContentHeight","ref3","getContentSize","scrollHeight","getKeyPageAbove","itemRect","pageY","Math","max","maxY","y","getKeyPageBelow","pageHeight","min","nextKey","getKeyForSearch","search","collator","hasWrapped","textValue","substring","slice","compare","options","disabledKeys","$1af922eb41e03c8f$export$e6235c0d09b995d0","WeakMap","$682989befd4f478d$exports","args","formatter","plural","count","one","number","other","$f7fca02019afd941$exports","$8f86f40be75387f1$exports","$db24ba43c8d652ee$exports","$f8f1e72c8b5447d6$exports","$9a73ed2983c3ab0b$exports","$583de0b3587601b9$exports","$147159c978043442$exports","$5cbb62c8a19173ac$exports","$a33d71dc804cc59e$exports","$92d800447793d084$exports","$fe732cdb32124ea8$exports","$e41234e934efb4f5$exports","$1b0393182473bf9e$exports","$2eed782c1c110ce7$exports","$8b5d459f86e9b23c$exports","$1949c3ad17295fd4$exports","$f5e3df4dc8aa7b54$exports","$9dd86690a5c2b2c5$exports","$843964c3bf9a7d24$exports","$73f50e845f9ef3b4$exports","$87f92a7e077514b2$exports","$c28c98d58ee9ff6f$exports","$b6b1503b17b2254d$exports","$8bdaeb71e50c3e1a$exports","$ec2b852dd7c3d1f2$exports","$79e6d900d6a4f82d$exports","$f4c1f0d5d4d03d80$exports","$46252cd87269b10b$exports","$d4d5d8dab362555c$exports","$3d55d1f97c377e83$exports","$5368512f1c703a3f$exports","$f1316b1074463583$exports","$7e60654723031b6f$exports","$1dbe5ffd32adb38c$exports","$92599c3fd427b763$export$137e594ef3218a10","props","state","getRowText","stringFormatter","$cVkRF$useLocalizedStringFormatter","selection","selectionManager","rawSelection","lastSelection","$cVkRF$useRef","$cVkRF$useUpdateEffect","isFocused","addedKeys","$92599c3fd427b763$var$diffSelection","removedKeys","isReplace","selectionBehavior","messages","selectedKeys","size","keys","value","currentSelectionText","push","format","addedText","removedText","selectionMode","$cVkRF$announce","join","a","b","res","Set","has","add","$5b9b5b5723db6ae1$export$be42ebdab07ae4c2","modality","$cVkRF$useInteractionModality","shouldLongPress","window","interactionDescription","$cVkRF$useMemo","message","undefined","hasItemActions","descriptionProps","$cVkRF$useDescription","$83c6e2eafa584c67$export$f6b86a04e5d66d90","isVirtualized","keyboardDelegate","scrollRef","onRowAction","onCellAction","console","warn","$cVkRF$useCollator","usage","sensitivity","$cVkRF$useLocale","delegate","collectionProps","$cVkRF$useSelectableCollection","id","$cVkRF$useId","set","actions","domProps","$cVkRF$filterDOMProps","labelable","gridProps","$cVkRF$mergeProps","role","isKeyboardNavigationDisabled","columnCount","$e45487f8ba1cbdbf$export$d3037f5d3f3e51bf","rowGroupProps","$4159a7a9cbb0cc18$export$96357d5a73f686fa","shouldSelectOnPressUp","onAction","get","itemProps","isPressed","$cVkRF$useSelectableItem","isSelected","rowProps","$ab90dcbc1b5466d0$export$c7e10bfc0c59f67c","focus","treeWalker","$cVkRF$getFocusableTreeWalker","contains","document","activeElement","focusable","childFocusStrategy","$ab90dcbc1b5466d0$var$last","firstChild","$cVkRF$focusSafely","onKeyDownCapture","e","currentTarget","target","walker","currentNode","nextNode","previousNode","preventDefault","stopPropagation","altKey","parentElement","dispatchEvent","KeyboardEvent","nativeEvent","onFocus","$cVkRF$isFocusVisible","setFocusedKey","requestAnimationFrame","gridCellProps","_colIndex","colIndex","last","lastChild","$7cb39d07f245a780$export$70e2eed1a92976ad","manager","checkboxId","isDisabled","canSelectItem","onChange","select","checkboxProps"],"sources":["C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\GridKeyboardDelegate.ts","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\utils.ts","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\ar-AE.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\bg-BG.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\cs-CZ.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\da-DK.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\de-DE.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\el-GR.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\en-US.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\es-ES.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\et-EE.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\fi-FI.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\fr-FR.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\he-IL.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\hr-HR.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\hu-HU.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\it-IT.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\ja-JP.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\ko-KR.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\lt-LT.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\lv-LV.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\nb-NO.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\nl-NL.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\pl-PL.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\pt-BR.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\pt-PT.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\ro-RO.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\ru-RU.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\sk-SK.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\sl-SI.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\sr-SP.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\sv-SE.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\tr-TR.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\uk-UA.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\zh-CN.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\zh-TW.json","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\*.js","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGridSelectionAnnouncement.ts","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useHighlightSelectionDescription.ts","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGrid.ts","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGridRowGroup.ts","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGridRow.ts","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGridCell.ts","C:\\Users\\MR . Noobick\\Desktop\\frontend\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGridSelectionCheckbox.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction, KeyboardDelegate, Node} from '@react-types/shared';\nimport {GridCollection} from '@react-types/grid';\nimport {Key, RefObject} from 'react';\nimport {Layout, Rect} from '@react-stately/virtualizer';\n\nexport interface GridKeyboardDelegateOptions<T, C> {\n  collection: C,\n  disabledKeys: Set<Key>,\n  ref?: RefObject<HTMLElement>,\n  direction: Direction,\n  collator?: Intl.Collator,\n  layout?: Layout<Node<T>>,\n  focusMode?: 'row' | 'cell'\n}\n\nexport class GridKeyboardDelegate<T, C extends GridCollection<T>> implements KeyboardDelegate {\n  collection: C;\n  protected disabledKeys: Set<Key>;\n  protected ref: RefObject<HTMLElement>;\n  protected direction: Direction;\n  protected collator: Intl.Collator;\n  protected layout: Layout<Node<T>>;\n  protected focusMode;\n\n  constructor(options: GridKeyboardDelegateOptions<T, C>) {\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.ref = options.ref;\n    this.direction = options.direction;\n    this.collator = options.collator;\n    this.layout = options.layout;\n    this.focusMode = options.focusMode || 'row';\n  }\n\n  protected isCell(node: Node<T>) {\n    return node.type === 'cell';\n  }\n\n  protected isRow(node: Node<T>) {\n    return node.type === 'row' || node.type === 'item';\n  }\n\n  protected findPreviousKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyBefore(fromKey)\n      : this.collection.getLastKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n\n  protected findNextKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyAfter(fromKey)\n      : this.collection.getFirstKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n\n  getKeyBelow(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the next item\n    key = this.findNextKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the next row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n\n      // Otherwise, focus the next row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus is on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the previous item\n    key = this.findPreviousKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the previous row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n\n      // Otherwise, focus the previous row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the first child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl'\n        ? children[children.length - 1].key\n        : children[0].key;\n    }\n\n    // If focus is on a cell, focus the next cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let next = this.direction === 'rtl'\n        ? children[item.index - 1]\n        : children[item.index + 1];\n\n      if (next) {\n        return next.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getFirstKey(key) : this.getLastKey(key);\n    }\n  }\n\n  getKeyLeftOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the last child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl'\n        ? children[0].key\n        : children[children.length - 1].key;\n    }\n\n    // If focus is on a cell, focus the previous cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let prev = this.direction === 'rtl'\n        ? children[item.index + 1]\n        : children[item.index - 1];\n\n      if (prev) {\n        return prev.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getLastKey(key) : this.getFirstKey(key);\n    }\n  }\n\n  getFirstKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the first cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        return [...parent.childNodes][0].key;\n      }\n    }\n\n    // Find the first row\n    key = this.findNextKey();\n\n    // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      key = [...item.childNodes][0].key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  getLastKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the last cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        let children = [...parent.childNodes];\n        return children[children.length - 1].key;\n      }\n    }\n\n    // Find the last row\n    key = this.findPreviousKey();\n\n    // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      let children = [...item.childNodes];\n      key = children[children.length - 1].key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  private getItem(key: Key): HTMLElement {\n    return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n  }\n\n  private getItemRect(key: Key): Rect {\n    if (this.layout) {\n      return this.layout.getLayoutInfo(key)?.rect;\n    }\n\n    let item = this.getItem(key);\n    if (item) {\n      return new Rect(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);\n    }\n  }\n\n  private getPageHeight(): number {\n    if (this.layout) {\n      return this.layout.virtualizer?.visibleRect.height;\n    }\n\n    return this.ref?.current?.offsetHeight;\n  }\n\n  private getContentHeight(): number {\n    if (this.layout) {\n      return this.layout.getContentSize().height;\n    }\n\n    return this.ref?.current?.scrollHeight;\n  }\n\n  getKeyPageAbove(key: Key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());\n\n    while (itemRect && itemRect.y > pageY) {\n      key = this.getKeyAbove(key);\n      itemRect = this.getItemRect(key);\n    }\n\n    return key;\n  }\n\n  getKeyPageBelow(key: Key) {\n    let itemRect = this.getItemRect(key);\n\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageHeight = this.getPageHeight();\n    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);\n\n    while (itemRect && itemRect.maxY < pageY) {\n      let nextKey = this.getKeyBelow(key);\n      itemRect = this.getItemRect(nextKey);\n\n      // Guard against case where maxY of the last key is barely less than pageY due to rounding\n      // and thus it attempts to set key to null\n      if (nextKey != null) {\n        key = nextKey;\n      }\n    }\n\n    return key;\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey ?? this.getFirstKey();\n\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') {\n      key = startItem.parentKey;\n    }\n\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n\n      // check row text value for match\n      if (item.textValue) {\n        let substring = item.textValue.slice(0, search.length);\n        if (this.collator.compare(substring, search) === 0) {\n          if (this.isRow(item) && this.focusMode === 'cell') {\n            return [...item.childNodes][0].key;\n          }\n\n          return item.key;\n        }\n      }\n\n      key = this.findNextKey(key);\n\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport type {GridCollection} from '@react-types/grid';\nimport type {GridState} from '@react-stately/grid';\nimport {Key} from 'react';\nimport type {KeyboardDelegate} from '@react-types/shared';\n\ninterface GridMapShared {\n  keyboardDelegate: KeyboardDelegate,\n  actions: {\n    onRowAction: (key: Key) => void,\n    onCellAction: (key: Key) => void\n  }\n}\n\n// Used to share:\n// keyboard delegate between useGrid and useGridCell\n// onRowAction/onCellAction across hooks\nexport const gridMap = new WeakMap<GridState<unknown, GridCollection<unknown>>, GridMapShared>();\n","{\n  \"deselectedItem\": \"{item} غير المحدد\",\n  \"longPressToSelect\": \"اضغط مطولًا للدخول إلى وضع التحديد.\",\n  \"select\": \"تحديد\",\n  \"selectedAll\": \"جميع العناصر المحددة.\",\n  \"selectedCount\": \"{count, plural, =0 {لم يتم تحديد عناصر} one {# عنصر محدد} other {# عنصر محدد}}.\",\n  \"selectedItem\": \"{item} المحدد\"\n}\n","{\n  \"deselectedItem\": \"{item} не е избран.\",\n  \"longPressToSelect\": \"Натиснете и задръжте за да влезете в избирателен режим.\",\n  \"select\": \"Изберете\",\n  \"selectedAll\": \"Всички елементи са избрани.\",\n  \"selectedCount\": \"{count, plural, =0 {Няма избрани елементи} one {# избран елемент} other {# избрани елементи}}.\",\n  \"selectedItem\": \"{item} избран.\"\n}\n","{\n  \"deselectedItem\": \"Položka {item} není vybrána.\",\n  \"longPressToSelect\": \"Dlouhým stisknutím přejdete do režimu výběru.\",\n  \"select\": \"Vybrat\",\n  \"selectedAll\": \"Vybrány všechny položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Nevybrány žádné položky} one {Vybrána # položka} other {Vybráno # položek}}.\",\n  \"selectedItem\": \"Vybrána položka {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} ikke valgt.\",\n  \"longPressToSelect\": \"Lav et langt tryk for at aktivere valgtilstand.\",\n  \"select\": \"Vælg\",\n  \"selectedAll\": \"Alle elementer valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer valgt} one {# element valgt} other {# elementer valgt}}.\",\n  \"selectedItem\": \"{item} valgt.\"\n}\n","{\n  \"deselectedItem\": \"{item} nicht ausgewählt.\",\n  \"longPressToSelect\": \"Gedrückt halten, um Auswahlmodus zu öffnen.\",\n  \"select\": \"Auswählen\",\n  \"selectedAll\": \"Alle Elemente ausgewählt.\",\n  \"selectedCount\": \"{count, plural, =0 {Keine Elemente ausgewählt} one {# Element ausgewählt} other {# Elemente ausgewählt}}.\",\n  \"selectedItem\": \"{item} ausgewählt.\"\n}\n","{\n  \"deselectedItem\": \"Δεν επιλέχθηκε το στοιχείο {item}.\",\n  \"longPressToSelect\": \"Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.\",\n  \"select\": \"Επιλογή\",\n  \"selectedAll\": \"Επιλέχθηκαν όλα τα στοιχεία.\",\n  \"selectedCount\": \"{count, plural, =0 {Δεν επιλέχθηκαν στοιχεία} one {Επιλέχθηκε # στοιχείο} other {Επιλέχθηκαν # στοιχεία}}.\",\n  \"selectedItem\": \"Επιλέχθηκε το στοιχείο {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} not selected.\",\n  \"select\": \"Select\",\n  \"selectedCount\": \"{count, plural, =0 {No items selected} one {# item selected} other {# items selected}}.\",\n  \"selectedAll\": \"All items selected.\",\n  \"selectedItem\": \"{item} selected.\",\n  \"longPressToSelect\": \"Long press to enter selection mode.\"\n}\n","{\n  \"deselectedItem\": \"{item} no seleccionado.\",\n  \"longPressToSelect\": \"Mantenga pulsado para abrir el modo de selección.\",\n  \"select\": \"Seleccionar\",\n  \"selectedAll\": \"Todos los elementos seleccionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Ningún elemento seleccionado} one {# elemento seleccionado} other {# elementos seleccionados}}.\",\n  \"selectedItem\": \"{item} seleccionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} pole valitud.\",\n  \"longPressToSelect\": \"Valikurežiimi sisenemiseks vajutage pikalt.\",\n  \"select\": \"Vali\",\n  \"selectedAll\": \"Kõik üksused valitud.\",\n  \"selectedCount\": \"{count, plural, =0 {Üksusi pole valitud} one {# üksus valitud} other {# üksust valitud}}.\",\n  \"selectedItem\": \"{item} valitud.\"\n}\n","{\n  \"deselectedItem\": \"Kohdetta {item} ei valittu.\",\n  \"longPressToSelect\": \"Siirry valintatilaan painamalla pitkään.\",\n  \"select\": \"Valitse\",\n  \"selectedAll\": \"Kaikki kohteet valittu.\",\n  \"selectedCount\": \"{count, plural, =0 {Ei yhtään kohdetta valittu} one {# kohde valittu} other {# kohdetta valittu}}.\",\n  \"selectedItem\": \"{item} valittu.\"\n}\n","{\n  \"deselectedItem\": \"{item} non sélectionné.\",\n  \"longPressToSelect\": \"Appuyez de manière prolongée pour passer en mode de sélection.\",\n  \"select\": \"Sélectionner\",\n  \"selectedAll\": \"Tous les éléments sélectionnés.\",\n  \"selectedCount\": \"{count, plural, =0 {Aucun élément sélectionné} one {# élément sélectionné} other {# éléments sélectionnés}}.\",\n  \"selectedItem\": \"{item} sélectionné.\"\n}\n","{\n  \"deselectedItem\": \"{item} לא נבחר.\",\n  \"longPressToSelect\": \"הקשה ארוכה לכניסה למצב בחירה.\",\n  \"select\": \"בחר\",\n  \"selectedAll\": \"כל הפריטים נבחרו.\",\n  \"selectedCount\": \"{count, plural, =0 {לא נבחרו פריטים} one {פריט # נבחר} other {# פריטים נבחרו}}.\",\n  \"selectedItem\": \"{item} נבחר.\"\n}\n","{\n  \"deselectedItem\": \"Stavka {item} nije odabrana.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u način odabira.\",\n  \"select\": \"Odaberite\",\n  \"selectedAll\": \"Odabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije odabrana nijedna stavka} one {Odabrana je # stavka} other {Odabrano je # stavki}}.\",\n  \"selectedItem\": \"Stavka {item} je odabrana.\"\n}\n","{\n  \"deselectedItem\": \"{item} nincs kijelölve.\",\n  \"longPressToSelect\": \"Nyomja hosszan a kijelöléshez.\",\n  \"select\": \"Kijelölés\",\n  \"selectedAll\": \"Az összes elem kijelölve.\",\n  \"selectedCount\": \"{count, plural, =0 {Egy elem sincs kijelölve} one {# elem kijelölve} other {# elem kijelölve}}.\",\n  \"selectedItem\": \"{item} kijelölve.\"\n}\n","{\n  \"deselectedItem\": \"{item} non selezionato.\",\n  \"longPressToSelect\": \"Premi a lungo per passare alla modalità di selezione.\",\n  \"select\": \"Seleziona\",\n  \"selectedAll\": \"Tutti gli elementi selezionati.\",\n  \"selectedCount\": \"{count, plural, =0 {Nessun elemento selezionato} one {# elemento selezionato} other {# elementi selezionati}}.\",\n  \"selectedItem\": \"{item} selezionato.\"\n}\n","{\n  \"deselectedItem\": \"{item} が選択されていません。\",\n  \"longPressToSelect\": \"長押しして選択モードを開きます。\",\n  \"select\": \"選択\",\n  \"selectedAll\": \"すべての項目を選択しました。\",\n  \"selectedCount\": \"{count, plural, =0 {項目が選択されていません} one {# 項目を選択しました} other {# 項目を選択しました}}。\",\n  \"selectedItem\": \"{item} を選択しました。\"\n}\n","{\n  \"deselectedItem\": \"{item}이(가) 선택되지 않았습니다.\",\n  \"longPressToSelect\": \"선택 모드로 들어가려면 길게 누르십시오.\",\n  \"select\": \"선택\",\n  \"selectedAll\": \"모든 항목이 선택되었습니다.\",\n  \"selectedCount\": \"{count, plural, =0 {선택된 항목이 없습니다} one {#개 항목이 선택되었습니다} other {#개 항목이 선택되었습니다}}.\",\n  \"selectedItem\": \"{item}이(가) 선택되었습니다.\"\n}\n","{\n  \"deselectedItem\": \"{item} nepasirinkta.\",\n  \"longPressToSelect\": \"Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.\",\n  \"select\": \"Pasirinkti\",\n  \"selectedAll\": \"Pasirinkti visi elementai.\",\n  \"selectedCount\": \"{count, plural, =0 {Nepasirinktas nė vienas elementas} one {Pasirinktas # elementas} other {Pasirinkta elementų: #}}.\",\n  \"selectedItem\": \"Pasirinkta: {item}.\"\n}\n","{\n  \"deselectedItem\": \"Vienums {item} nav atlasīts.\",\n  \"longPressToSelect\": \"Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.\",\n  \"select\": \"Atlasīt\",\n  \"selectedAll\": \"Atlasīti visi vienumi.\",\n  \"selectedCount\": \"{count, plural, =0 {Nav atlasīts neviens vienums} one {Atlasīto vienumu skaits: #} other {Atlasīto vienumu skaits: #}}.\",\n  \"selectedItem\": \"Atlasīts vienums {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} er ikke valgt.\",\n  \"longPressToSelect\": \"Bruk et langt trykk for å gå inn i valgmodus.\",\n  \"select\": \"Velg\",\n  \"selectedAll\": \"Alle elementer er valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer er valgt} one {# element er valgt} other {# elementer er valgt}}.\",\n  \"selectedItem\": \"{item} er valgt.\"\n}\n","{\n  \"deselectedItem\": \"{item} niet geselecteerd.\",\n  \"longPressToSelect\": \"Druk lang om de selectiemodus te openen.\",\n  \"select\": \"Selecteren\",\n  \"selectedAll\": \"Alle items geselecteerd.\",\n  \"selectedCount\": \"{count, plural, =0 {Geen items geselecteerd} one {# item geselecteerd} other {# items geselecteerd}}.\",\n  \"selectedItem\": \"{item} geselecteerd.\"\n}\n","{\n  \"deselectedItem\": \"Nie zaznaczono {item}.\",\n  \"longPressToSelect\": \"Naciśnij i przytrzymaj, aby wejść do trybu wyboru.\",\n  \"select\": \"Zaznacz\",\n  \"selectedAll\": \"Wszystkie zaznaczone elementy.\",\n  \"selectedCount\": \"{count, plural, =0 {Nie zaznaczono żadnych elementów} one {# zaznaczony element} other {# zaznaczonych elementów}}.\",\n  \"selectedItem\": \"Zaznaczono {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Mantenha pressionado para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Prima continuamente para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} neselectat.\",\n  \"longPressToSelect\": \"Apăsați lung pentru a intra în modul de selectare.\",\n  \"select\": \"Selectare\",\n  \"selectedAll\": \"Toate elementele selectate.\",\n  \"selectedCount\": \"{count, plural, =0 {Niciun element selectat} one {# element selectat} other {# elemente selectate}}.\",\n  \"selectedItem\": \"{item} selectat.\"\n}\n","{\n  \"deselectedItem\": \"{item} не выбрано.\",\n  \"longPressToSelect\": \"Нажмите и удерживайте для входа в режим выбора.\",\n  \"select\": \"Выбрать\",\n  \"selectedAll\": \"Выбраны все элементы.\",\n  \"selectedCount\": \"{count, plural, =0 {Нет выбранных элементов} one {# элемент выбран} other {# элементов выбрано}}.\",\n  \"selectedItem\": \"{item} выбрано.\"\n}\n","{\n  \"deselectedItem\": \"Nevybraté položky: {item}.\",\n  \"longPressToSelect\": \"Dlhším stlačením prejdite do režimu výberu.\",\n  \"select\": \"Vybrať\",\n  \"selectedAll\": \"Všetky vybraté položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Žiadne vybraté položky} one {# vybratá položka} other {Počet vybratých položiek:#}}.\",\n  \"selectedItem\": \"Vybraté položky: {item}.\"\n}\n","{\n  \"deselectedItem\": \"Element {item} ni izbran.\",\n  \"longPressToSelect\": \"Za izbirni način pritisnite in dlje časa držite.\",\n  \"select\": \"Izberite\",\n  \"selectedAll\": \"Vsi elementi so izbrani.\",\n  \"selectedCount\": \"{count, plural, =0 {Noben element ni izbran} one {# element je izbran} other {# elementov je izbranih}}.\",\n  \"selectedItem\": \"Element {item} je izbran.\"\n}\n","{\n  \"deselectedItem\": \"{item} nije izabrano.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u režim biranja.\",\n  \"select\": \"Izaberite\",\n  \"selectedAll\": \"Izabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije izabrana nijedna stavka} one {Izabrana je # stavka} other {Izabrano je # stavki}}.\",\n  \"selectedItem\": \"{item} je izabrano.\"\n}\n","{\n  \"deselectedItem\": \"{item} ej markerat.\",\n  \"longPressToSelect\": \"Tryck länge när du vill öppna väljarläge.\",\n  \"select\": \"Markera\",\n  \"selectedAll\": \"Alla markerade objekt.\",\n  \"selectedCount\": \"{count, plural, =0 {Inga markerade objekt} one {# markerat objekt} other {# markerade objekt}}.\",\n  \"selectedItem\": \"{item} markerat.\"\n}\n","{\n  \"deselectedItem\": \"{item} seçilmedi.\",\n  \"longPressToSelect\": \"Seçim moduna girmek için uzun basın.\",\n  \"select\": \"Seç\",\n  \"selectedAll\": \"Tüm ögeler seçildi.\",\n  \"selectedCount\": \"{count, plural, =0 {Hiçbir öge seçilmedi} one {# öge seçildi} other {# öge seçildi}}.\",\n  \"selectedItem\": \"{item} seçildi.\"\n}\n","{\n  \"deselectedItem\": \"{item} не вибрано.\",\n  \"longPressToSelect\": \"Виконайте довге натиснення, щоб перейти в режим вибору.\",\n  \"select\": \"Вибрати\",\n  \"selectedAll\": \"Усі елементи вибрано.\",\n  \"selectedCount\": \"{count, plural, =0 {Жодних елементів не вибрано} one {# елемент вибрано} other {Вибрано елементів: #}}.\",\n  \"selectedItem\": \"{item} вибрано.\"\n}\n","{\n  \"deselectedItem\": \"未选择 {item}。\",\n  \"longPressToSelect\": \"长按以进入选择模式。\",\n  \"select\": \"选择\",\n  \"selectedAll\": \"已选择所有项目。\",\n  \"selectedCount\": \"{count, plural, =0 {未选择项目} one {已选择 # 个项目} other {已选择 # 个项目}}。\",\n  \"selectedItem\": \"已选择 {item}。\"\n}\n","{\n  \"deselectedItem\": \"未選取「{item}」。\",\n  \"longPressToSelect\": \"長按以進入選擇模式。\",\n  \"select\": \"選取\",\n  \"selectedAll\": \"已選取所有項目。\",\n  \"selectedCount\": \"{count, plural, =0 {未選取任何項目} one {已選取 # 個項目} other {已選取 # 個項目}}。\",\n  \"selectedItem\": \"已選取「{item}」。\"\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {Collection, Node, Selection} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key, useRef} from 'react';\nimport {SelectionManager} from '@react-stately/selection';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useUpdateEffect} from '@react-aria/utils';\n\nexport interface GridSelectionAnnouncementProps {\n  /**\n   * A function that returns the text that should be announced by assistive technology when a row is added or removed from selection.\n   * @default (key) => state.collection.getItem(key)?.textValue\n   */\n  getRowText?: (key: Key) => string\n}\n\ninterface GridSelectionState<T> {\n  /** A collection of items in the grid. */\n  collection: Collection<Node<T>>,\n  /** A set of items that are disabled. */\n  disabledKeys: Set<Key>,\n  /** A selection manager to read and update multiple selection state. */\n  selectionManager: SelectionManager\n}\n\nexport function useGridSelectionAnnouncement<T>(props: GridSelectionAnnouncementProps, state: GridSelectionState<T>) {\n  let {\n    getRowText = (key) => state.collection.getItem(key)?.textValue\n  } = props;\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n\n  // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n  let selection = state.selectionManager.rawSelection;\n  let lastSelection = useRef(selection);\n  useUpdateEffect(() => {\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n\n      return;\n    }\n\n    let addedKeys = diffSelection(selection, lastSelection.current);\n    let removedKeys = diffSelection(lastSelection.current, selection);\n\n    // If adding or removing a single row from the selection, announce the name of that item.\n    let isReplace = state.selectionManager.selectionBehavior === 'replace';\n    let messages = [];\n\n    if ((state.selectionManager.selectedKeys.size === 1 && isReplace)) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) {\n          messages.push(stringFormatter.format('selectedItem', {item: currentSelectionText}));\n        }\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      let addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) {\n        messages.push(stringFormatter.format('selectedItem', {item: addedText}));\n      }\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        let removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) {\n          messages.push(stringFormatter.format('deselectedItem', {item: removedText}));\n        }\n      }\n    }\n\n    // Announce how many items are selected, except when selecting the first item.\n    if (state.selectionManager.selectionMode === 'multiple') {\n      if (messages.length === 0 || selection === 'all' || selection.size > 1 || lastSelection.current === 'all' || lastSelection.current?.size > 1) {\n        messages.push(selection === 'all'\n          ? stringFormatter.format('selectedAll')\n          : stringFormatter.format('selectedCount', {count: selection.size})\n        );\n      }\n    }\n\n    if (messages.length > 0) {\n      announce(messages.join(' '));\n    }\n\n    lastSelection.current = selection;\n  }, [selection]);\n}\n\nfunction diffSelection(a: Selection, b: Selection): Set<Key> {\n  let res = new Set<Key>();\n  if (a === 'all' || b === 'all') {\n    return res;\n  }\n\n  for (let key of a.keys()) {\n    if (!b.has(key)) {\n      res.add(key);\n    }\n  }\n\n  return res;\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useDescription} from '@react-aria/utils';\nimport {useInteractionModality} from '@react-aria/interactions';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useMemo} from 'react';\n\nexport interface HighlightSelectionDescriptionProps {\n  selectionManager: MultipleSelectionManager,\n  hasItemActions?: boolean\n}\n\n/**\n * Computes the description for a grid selectable collection.\n * @param props\n */\nexport function useHighlightSelectionDescription(props: HighlightSelectionDescriptionProps): AriaLabelingProps {\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let modality = useInteractionModality();\n  // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n  let shouldLongPress = (modality === 'pointer' || modality === 'virtual' || modality == null)\n    && typeof window !== 'undefined' && 'ontouchstart' in window;\n\n  let interactionDescription = useMemo(() => {\n    let selectionMode = props.selectionManager.selectionMode;\n    let selectionBehavior = props.selectionManager.selectionBehavior;\n\n    let message = undefined;\n    if (shouldLongPress) {\n      message = stringFormatter.format('longPressToSelect');\n    }\n\n    return selectionBehavior === 'replace' && selectionMode !== 'none' && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, stringFormatter, shouldLongPress]);\n\n  let descriptionProps = useDescription(interactionDescription);\n  return descriptionProps;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMAttributes, DOMProps, KeyboardDelegate} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useId} from '@react-aria/utils';\nimport {GridCollection} from '@react-types/grid';\nimport {GridKeyboardDelegate} from './GridKeyboardDelegate';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {Key, RefObject, useMemo} from 'react';\nimport {useCollator, useLocale} from '@react-aria/i18n';\nimport {useGridSelectionAnnouncement} from './useGridSelectionAnnouncement';\nimport {useHighlightSelectionDescription} from './useHighlightSelectionDescription';\nimport {useSelectableCollection} from '@react-aria/selection';\n\nexport interface GridProps extends DOMProps, AriaLabelingProps {\n  /** Whether the grid uses virtual scrolling. */\n  isVirtualized?: boolean,\n  /**\n   * An optional keyboard delegate implementation for type to select,\n   * to override the default.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n  /**\n   * Whether initial grid focus should be placed on the grid row or grid cell.\n   * @default 'row'\n   */\n  focusMode?: 'row' | 'cell',\n  /**\n   * A function that returns the text that should be announced by assistive technology when a row is added or removed from selection.\n   * @default (key) => state.collection.getItem(key)?.textValue\n   */\n  getRowText?: (key: Key) => string,\n  /**\n   * The ref attached to the scrollable body. Used to provided automatic scrolling on item focus for non-virtualized grids.\n   */\n  scrollRef?: RefObject<HTMLElement>,\n  /** Handler that is called when a user performs an action on the row. */\n  onRowAction?: (key: Key) => void,\n  /** Handler that is called when a user performs an action on the cell. */\n  onCellAction?: (key: Key) => void\n}\n\nexport interface GridAria {\n  /** Props for the grid element. */\n  gridProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a grid component.\n * A grid displays data in one or more rows and columns and enables a user to navigate its contents via directional navigation keys.\n * @param props - Props for the grid.\n * @param state - State for the grid, as returned by `useGridState`.\n * @param ref - The ref attached to the grid element.\n */\nexport function useGrid<T>(props: GridProps, state: GridState<T, GridCollection<T>>, ref: RefObject<HTMLElement>): GridAria {\n  let {\n    isVirtualized,\n    keyboardDelegate,\n    focusMode,\n    scrollRef,\n    getRowText,\n    onRowAction,\n    onCellAction\n  } = props;\n\n  if (!props['aria-label'] && !props['aria-labelledby']) {\n    console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  }\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {direction} = useLocale();\n  let delegate = useMemo(() => keyboardDelegate || new GridKeyboardDelegate({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref,\n    direction,\n    collator,\n    focusMode\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, focusMode]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    isVirtualized,\n    scrollRef\n  });\n\n  let id = useId(props.id);\n  gridMap.set(state, {keyboardDelegate: delegate, actions: {onRowAction, onCellAction}});\n\n  let descriptionProps = useHighlightSelectionDescription({\n    selectionManager: state.selectionManager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n\n  let domProps = filterDOMProps(props, {labelable: true});\n  let gridProps: DOMAttributes = mergeProps(\n    domProps,\n    {\n      role: 'grid',\n      id,\n      'aria-multiselectable': state.selectionManager.selectionMode === 'multiple' ? 'true' : undefined\n    },\n    state.isKeyboardNavigationDisabled ? {} : collectionProps,\n    descriptionProps\n  );\n\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size;\n    gridProps['aria-colcount'] = state.collection.columnCount;\n  }\n\n  useGridSelectionAnnouncement({getRowText}, state);\n  return {\n    gridProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\n\nexport interface GridRowGroupAria {\n  /** Props for the row group element. */\n  rowGroupProps: DOMAttributes\n}\n\n/**\n * Provides the accessibility implementation for a row group in a grid.\n */\nexport function useGridRowGroup(): GridRowGroupAria {\n  return {\n    rowGroupProps: {\n      role: 'rowgroup'\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement, Node} from '@react-types/shared';\nimport {GridCollection} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {RefObject} from 'react';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface GridRowProps<T> {\n  /** An object representing the grid row. Contains all the relevant information that makes up the grid row. */\n  node: Node<T>,\n  /** Whether the grid row is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the row.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridRowAria {\n  /** Props for the grid row element. */\n  rowProps: DOMAttributes,\n  /** Whether the row is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a row in a grid.\n * @param props - Props for the row.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridRow<T, C extends GridCollection<T>, S extends GridState<T, C>>(props: GridRowProps<T>, state: S, ref: RefObject<FocusableElement>): GridRowAria {\n  let {\n    node,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {actions: {onRowAction}} = gridMap.get(state);\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction: onRowAction ? () => onRowAction(node.key) : onAction\n  });\n\n  let isSelected = state.selectionManager.isSelected(node.key);\n\n  let rowProps: DOMAttributes = {\n    role: 'row',\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined,\n    ...itemProps\n  };\n\n  if (isVirtualized) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps,\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {focusSafely, getFocusableTreeWalker} from '@react-aria/focus';\nimport {GridCollection, GridNode} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {isFocusVisible} from '@react-aria/interactions';\nimport {mergeProps} from '@react-aria/utils';\nimport {KeyboardEvent as ReactKeyboardEvent, RefObject} from 'react';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface GridCellProps {\n  /** An object representing the grid cell. Contains all the relevant information that makes up the grid cell. */\n  node: GridNode<unknown>,\n  /** Whether the grid cell is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether the cell or its first focusable child element should be focused when the grid cell is focused. */\n  focusMode?: 'child' | 'cell',\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the cell.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridCellAria {\n  /** Props for the grid cell element. */\n  gridCellProps: DOMAttributes,\n  /** Whether the cell is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a cell in a grid.\n * @param props - Props for the cell.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridCell<T, C extends GridCollection<T>>(props: GridCellProps, state: GridState<T, C>, ref: RefObject<FocusableElement>): GridCellAria {\n  let {\n    node,\n    isVirtualized,\n    focusMode = 'child',\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {direction} = useLocale();\n  let {keyboardDelegate, actions: {onCellAction}} = gridMap.get(state);\n\n  // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n  let focus = () => {\n    let treeWalker = getFocusableTreeWalker(ref.current);\n    if (focusMode === 'child') {\n      // If focus is already on a focusable child within the cell, early return so we don't shift focus\n      if (ref.current.contains(document.activeElement) && ref.current !== document.activeElement) {\n        return;\n      }\n\n      let focusable = state.selectionManager.childFocusStrategy === 'last'\n        ? last(treeWalker)\n        : treeWalker.firstChild() as FocusableElement;\n      if (focusable) {\n        focusSafely(focusable);\n        return;\n      }\n    }\n\n    if (!ref.current.contains(document.activeElement)) {\n      focusSafely(ref.current);\n    }\n  };\n\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    focus,\n    shouldSelectOnPressUp,\n    onAction: onCellAction ? () => onCellAction(node.key) : onAction\n  });\n\n  let onKeyDownCapture = (e: ReactKeyboardEvent) => {\n    if (!e.currentTarget.contains(e.target as Element) || state.isKeyboardNavigationDisabled) {\n      return;\n    }\n\n    let walker = getFocusableTreeWalker(ref.current);\n    walker.currentNode = document.activeElement;\n\n    switch (e.key) {\n      case 'ArrowLeft': {\n        // Find the next focusable element within the cell.\n        let focusable = direction === 'rtl'\n          ? walker.nextNode() as FocusableElement\n          : walker.previousNode() as FocusableElement;\n\n        // Don't focus the cell itself if focusMode is \"child\"\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n        } else {\n          // If there is no next focusable child, then move to the next cell to the left of this one.\n          // This will be handled by useSelectableCollection. However, if there is no cell to the left\n          // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n          // same as this one. In that case we need to handle focusing either the cell or the first/last\n          // child, depending on the focus mode.\n          let prev = keyboardDelegate.getKeyLeftOf(node.key);\n          if (prev !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'rtl') {\n            focusSafely(ref.current);\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? walker.firstChild() as FocusableElement\n              : last(walker);\n            if (focusable) {\n              focusSafely(focusable);\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        let focusable = direction === 'rtl'\n          ? walker.previousNode() as FocusableElement\n          : walker.nextNode() as FocusableElement;\n\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n        } else {\n          let next = keyboardDelegate.getKeyRightOf(node.key);\n          if (next !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'ltr') {\n            focusSafely(ref.current);\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? last(walker)\n              : walker.firstChild() as FocusableElement;\n            if (focusable) {\n              focusSafely(focusable);\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowUp':\n      case 'ArrowDown':\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target as Element)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement.dispatchEvent(\n            new KeyboardEvent(e.nativeEvent.type, e.nativeEvent)\n          );\n        }\n        break;\n    }\n  };\n\n  // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n  let onFocus = (e) => {\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!isFocusVisible()) {\n        state.selectionManager.setFocusedKey(node.key);\n      }\n      return;\n    }\n\n    // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n    requestAnimationFrame(() => {\n      if (focusMode === 'child' && document.activeElement === ref.current) {\n        focus();\n      }\n    });\n  };\n\n  let gridCellProps: DOMAttributes = mergeProps(itemProps, {\n    role: 'gridcell',\n    onKeyDownCapture,\n    onFocus\n  });\n\n  if (isVirtualized) {\n    gridCellProps['aria-colindex'] = (node.colIndex ?? node.index) + 1; // aria-colindex is 1-based\n  }\n\n  return {\n    gridCellProps,\n    isPressed\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: FocusableElement;\n  let last: FocusableElement;\n  do {\n    last = walker.lastChild() as FocusableElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n","import {AriaCheckboxProps} from '@react-types/checkbox';\nimport {GridCollection} from '@react-types/grid';\nimport {GridState} from '@react-stately/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key} from 'react';\nimport {useId} from '@react-aria/utils';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaGridSelectionCheckboxProps {\n  /** A unique key for the checkbox. */\n  key: Key\n}\n\nexport interface GridSelectionCheckboxAria {\n  /** Props for the row selection checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\n\n/**\n * Provides the behavior and accessibility implementation for a selection checkbox in a grid.\n * @param props - Props for the selection checkbox.\n * @param state - State of the grid, as returned by `useGridState`.\n */\nexport function useGridSelectionCheckbox<T, C extends GridCollection<T>>(props: AriaGridSelectionCheckboxProps, state: GridState<T, C>): GridSelectionCheckboxAria {\n  let {key} = props;\n\n  let manager = state.selectionManager;\n  let checkboxId = useId();\n  let isDisabled = !state.selectionManager.canSelectItem(key);\n  let isSelected = state.selectionManager.isSelected(key);\n\n  let onChange = () => manager.select(key);\n\n  const stringFormatter = useLocalizedStringFormatter(intlMessages);\n\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      'aria-label': stringFormatter.format('select'),\n      isSelected,\n      isDisabled,\n      onChange\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}